{"version":3,"file":"Element.js","sourceRoot":"","sources":["../../src/Element.ts"],"names":[],"mappings":"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","sourcesContent":["import findDisplayed from './lib/findDisplayed';\nimport * as fs from 'fs';\nimport Locator, { Strategy, toW3cLocator } from './lib/Locator';\nimport waitForDeleted from './lib/waitForDeleted';\nimport { manualFindByLinkText, sleep } from './lib/util';\nimport { Task, CancellablePromise } from '@theintern/common';\nimport Session from './Session';\nimport * as JSZip from 'jszip';\nimport { basename } from 'path';\n\n/**\n * The Element class represents a DOM or UI element within the remote\n * environment.\n */\nexport default class Element extends Locator<\n  CancellablePromise<Element>,\n  CancellablePromise<Element[]>,\n  CancellablePromise<void>\n> {\n  private _elementId: string;\n  private _session: Session;\n\n  /**\n   * @constructor module:leadfoot/Element\n   *\n   * @param elementId\n   * The ID of the element, as provided by the remote.\n   *\n   * @param session\n   * The session that the element belongs to.\n   */\n  constructor(elementId: /*ElementOrElementId*/ any, session: Session) {\n    super();\n\n    this._elementId =\n      elementId.ELEMENT ||\n      elementId.elementId ||\n      elementId['element-6066-11e4-a52e-4f735466cecf'] ||\n      elementId;\n    this._session = session;\n  }\n\n  /**\n   * The opaque, remote-provided ID of the element.\n   *\n   * @member elementId\n   * @readonly\n   */\n  get elementId() {\n    return this._elementId;\n  }\n\n  /**\n   * The [[Session]] that the element belongs to.\n   * @readonly\n   */\n  get session() {\n    return this._session;\n  }\n\n  private _get<T>(\n    path: string,\n    requestData?: any,\n    pathParts?: any\n  ): CancellablePromise<T> {\n    path = 'element/' + encodeURIComponent(this._elementId) + '/' + path;\n    return this._session.serverGet<T>(path, requestData, pathParts);\n  }\n\n  private _post<T>(\n    path: string,\n    requestData?: any,\n    pathParts?: any\n  ): CancellablePromise<T> {\n    path = 'element/' + encodeURIComponent(this._elementId) + '/' + path;\n    return this._session.serverPost<T>(path, requestData, pathParts);\n  }\n\n  toJSON() {\n    // Include both the JSONWireProtocol and W3C element properties\n    return {\n      ELEMENT: this._elementId,\n      'element-6066-11e4-a52e-4f735466cecf': this._elementId\n    };\n  }\n\n  /**\n   * Normalize whitespace in the same way that most browsers generate\n   * innerText.\n   *\n   * @param text text to normalize\n   * @returns Text with leading and trailing whitespace removed, with inner\n   * runs of spaces changed to a single space, and with \"\\r\\n\" pairs\n   * converted to \"\\n\".\n   */\n  private _normalizeWhitespace(text: string): string {\n    if (text) {\n      text = text\n        .replace(/^\\s+/gm, '')\n        .replace(/\\s+$/gm, '')\n        .replace(/\\s*\\r\\n\\s*/g, '\\n')\n        .replace(/ +/g, ' ');\n    }\n\n    return text;\n  }\n\n  /**\n   * Uploads a file to a remote Selenium server for use when testing file\n   * uploads. This API is not part of the WebDriver specification and should\n   * not be used directly. To send a file to a server that supports file\n   * uploads, use [[Element.Element.type]] to type the name of the local file\n   * into a file input field and the file will be transparently transmitted\n   * and used by the server.\n   */\n  private _uploadFile(filename: string): CancellablePromise<string> {\n    return new Task<string>(resolve => {\n      const content = fs.readFileSync(filename);\n\n      let zip = new JSZip();\n      zip.file(basename(filename), content);\n      zip.generateAsync({ type: 'base64' }).then(file => {\n        resolve(this.session.serverPost('file', { file }));\n      });\n    });\n  }\n\n  /**\n   * Gets the first element within this element that matches the given query.\n   *\n   * See [[Session.Session.setFindTimeout]] to set the amount of time it the\n   * remote environment should spend waiting for an element that does not\n   * exist at the time of the `find` call before timing out.\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  find(using: Strategy, value: string): CancellablePromise<Element> {\n    const session = this._session;\n    const capabilities = session.capabilities;\n\n    if (capabilities.usesWebDriverLocators) {\n      const locator = toW3cLocator(using, value);\n      using = locator.using;\n      value = locator.value;\n    }\n\n    if (\n      using.indexOf('link text') !== -1 &&\n      (capabilities.brokenWhitespaceNormalization ||\n        capabilities.brokenLinkTextLocator)\n    ) {\n      return session\n        .execute<ElementOrElementId>(manualFindByLinkText, [\n          using,\n          value,\n          false,\n          this\n        ])\n        .then(function(element) {\n          if (!element) {\n            const error = new Error();\n            error.name = 'NoSuchElement';\n            throw error;\n          }\n          return new Element(element, session);\n        });\n    }\n\n    return this._post<ElementOrElementId>('element', {\n      using,\n      value\n    })\n      .then(function(element) {\n        return new Element(element, session);\n      })\n      .catch(function(error) {\n        // At least Firefox 49 + geckodriver returns an UnknownCommand\n        // error when unable to find elements.\n        if (\n          error.name === 'UnknownCommand' &&\n          error.message.indexOf('Unable to locate element:') !== -1\n        ) {\n          const newError = new Error();\n          newError.name = 'NoSuchElement';\n          newError.message = error.message;\n          throw newError;\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * Gets all elements within this element that match the given query.\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  findAll(using: Strategy, value: string): CancellablePromise<Element[]> {\n    const session = this._session;\n    const capabilities = session.capabilities;\n\n    if (capabilities.usesWebDriverLocators) {\n      const locator = toW3cLocator(using, value);\n      using = locator.using;\n      value = locator.value;\n    }\n\n    let task: CancellablePromise<ElementOrElementId[]>;\n    if (\n      using.indexOf('link text') !== -1 &&\n      (capabilities.brokenWhitespaceNormalization ||\n        capabilities.brokenLinkTextLocator)\n    ) {\n      task = session.execute<ElementOrElementId[]>(manualFindByLinkText, [\n        using,\n        value,\n        true,\n        this\n      ]);\n    } else {\n      task = this._post<ElementOrElementId[]>('elements', {\n        using: using,\n        value: value\n      });\n    }\n\n    return task.then(function(elements) {\n      return elements.map(function(element) {\n        return new Element(element, session);\n      });\n    });\n  }\n\n  /**\n   * Clicks the element. This method works on both mouse and touch platforms.\n   */\n  click() {\n    if (this.session.capabilities.brokenClick) {\n      return this.session.execute<void>(\n        /* istanbul ignore next */ (element: HTMLElement) => {\n          element.click();\n        },\n        [this]\n      );\n    }\n\n    return this._post<void>('click').then(() => {\n      // ios-driver 0.6.6-SNAPSHOT April 2014 and MS Edge Driver 14316 do\n      // not wait until the default action for a click event occurs\n      // before returning\n      if (\n        this.session.capabilities.touchEnabled ||\n        this.session.capabilities.returnsFromClickImmediately\n      ) {\n        return sleep(500);\n      }\n    });\n  }\n\n  /**\n   * Submits the element, if it is a form, or the form belonging to the\n   * element, if it is a form element.\n   */\n  submit() {\n    if (this.session.capabilities.brokenSubmitElement) {\n      return this.session.execute<void>(\n        /* istanbul ignore next */ (element: any) => {\n          if (element.submit) {\n            element.submit();\n          } else if (element.type === 'submit' && element.click) {\n            element.click();\n          }\n        },\n        [this]\n      );\n    }\n\n    return this._post<void>('submit');\n  }\n\n  /**\n   * Gets the visible text within the element. `<br>` elements are converted\n   * to line breaks in the returned text, and whitespace is normalised per\n   * the usual XML/HTML whitespace normalisation rules.\n   */\n  getVisibleText(): CancellablePromise<string> {\n    if (this.session.capabilities.brokenVisibleText) {\n      return this.session.execute<string>(\n        /* istanbul ignore next */ (element: any) => {\n          return element.innerText;\n        },\n        [this]\n      );\n    }\n\n    const result = this._get<string>('text');\n\n    if (this.session.capabilities.brokenWhitespaceNormalization) {\n      return result.then(text => this._normalizeWhitespace(text));\n    }\n\n    return result;\n  }\n\n  /**\n   * Types into the element. This method works the same as the\n   * [[Session.Session.pressKeys]] method except that any modifier keys are\n   * automatically released at the end of the command. This method should be\n   * used instead of [[Session.Session.pressKeys]] to type filenames into\n   * file upload fields.\n   *\n   * Since 1.5, if the WebDriver server supports remote file uploads, and you\n   * type a path to a file on your local computer, that file will be\n   * transparently uploaded to the remote server and the remote filename will\n   * be typed instead. If you do not want to upload local files, use\n   * [[Session.Session.pressKeys]] instead.\n   *\n   * @param value The text to type in the remote environment. See\n   * [[Session.Session.pressKeys]] for more information.\n   */\n  type(value: string | string[]): CancellablePromise<void> {\n    const getPostData = (\n      value: string[]\n    ): { value?: string[]; text?: string } => {\n      if (this.session.capabilities.usesWebDriverElementValue) {\n        // At least geckodriver 0.21+ and the WebDriver standard\n        // require the `/value` endpoint to take a `text` parameter\n        // that is a string.\n        return { text: value.join('') };\n      } else if (this.session.capabilities.usesFlatKeysArray) {\n        // At least Firefox 49+ via Selenium requires the keys value to\n        // be a flat array of characters\n        return { value: value.join('').split('') };\n      } else {\n        return { value };\n      }\n    };\n\n    const handleError = (reason: any) => {\n      if (\n        reason.detail.error === 'invalid argument' &&\n        !this.session.capabilities.usesWebDriverElementValue\n      ) {\n        this.session.capabilities.usesWebDriverElementValue = true;\n        return this.type(value);\n      }\n      throw reason;\n    };\n\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    if (this.session.capabilities.remoteFiles) {\n      const filename = value.join('');\n\n      // Check to see if the input is a filename; if so, upload the file\n      // and then post it's remote name into the field\n      try {\n        if (fs.statSync(filename).isFile()) {\n          return this._uploadFile(filename).then(uploadedFilename => {\n            return this._post('value', getPostData([uploadedFilename]))\n              .then(noop)\n              .catch(handleError);\n          });\n        }\n      } catch (error) {\n        // ignore\n      }\n    }\n\n    // If the input isn't a filename, just post the value directly\n    return this._post('value', getPostData(value))\n      .then(noop)\n      .catch(handleError);\n  }\n\n  /**\n   * Gets the tag name of the element. For HTML documents, the value is\n   * always lowercase.\n   */\n  getTagName(): CancellablePromise<string> {\n    return this._get<string>('name').then(name => {\n      if (this.session.capabilities.brokenHtmlTagName) {\n        return this.session\n          .execute<boolean>(\n            'return document.body && document.body.tagName === document.body.tagName.toUpperCase();'\n          )\n          .then(function(isHtml: boolean) {\n            return isHtml ? name.toLowerCase() : name;\n          });\n      }\n\n      return name;\n    });\n  }\n\n  /**\n   * Clears the value of a form element.\n   */\n  clearValue(): CancellablePromise<void> {\n    return this._post('clear').then(noop);\n  }\n\n  /**\n   * Returns whether or not a form element is currently selected (for\n   * drop-down options and radio buttons), or whether or not the element is\n   * currently checked (for checkboxes).\n   */\n  isSelected(): CancellablePromise<boolean> {\n    return this._get<boolean>('selected');\n  }\n\n  /**\n   * Returns whether or not a form element can be interacted with.\n   */\n  isEnabled(): CancellablePromise<boolean> {\n    if (this.session.capabilities.brokenElementEnabled) {\n      return this.session.execute<boolean>(\n        /* istanbul ignore next */ function(element: HTMLElement) {\n          return !Boolean(element.hasAttribute('disabled'));\n        },\n        [this]\n      );\n    }\n    return this._get<boolean>('enabled');\n  }\n\n  /**\n   * Gets a property or attribute of the element according to the WebDriver\n   * specification algorithm. Use of this method is not recommended; instead,\n   * use [[Element.Element.getAttribute]] to retrieve DOM attributes and\n   * [[Element.Element.getProperty]] to retrieve DOM properties.\n   *\n   * This method uses the following algorithm on the server to determine what\n   * value to return:\n   *\n   * 1. If `name` is 'style', returns the `style.cssText` property of the\n   *    element.\n   * 2. If the attribute exists and is a boolean attribute, returns 'true' if\n   *    the attribute is true, or null otherwise.\n   * 3. If the element is an `<option>` element and `name` is 'value',\n   *    returns the `value` attribute if it exists, otherwise returns the\n   *    visible text content of the option.\n   * 4. If the element is a checkbox or radio button and `name` is\n   *    'selected', returns 'true' if the element is checked, or null\n   *    otherwise.\n   * 5. If the returned value is expected to be a URL (e.g. element is `<a>`\n   *    and attribute is `href`), returns the fully resolved URL from the\n   *    `href`/`src` property of the element, not the attribute.\n   * 6. If `name` is 'class', returns the `className` property of the\n   *    element.\n   * 7. If `name` is 'readonly', returns 'true' if the `readOnly` property is\n   *    true, or null otherwise.\n   * 8. If `name` corresponds to a property of the element, and the property\n   *    is not an Object, return the property value coerced to a string.\n   * 9. If `name` corresponds to an attribute of the element, return the\n   *    attribute value.\n   *\n   * @param name The property or attribute name.\n   * @returns The value of the attribute as a string, or `null` if no such\n   * property or attribute exists.\n   */\n  getSpecAttribute(name: string): CancellablePromise<string | null> {\n    return this._get<string | undefined>('attribute/$0', null, [name])\n      .then(value => {\n        if (\n          this.session.capabilities.brokenNullGetSpecAttribute &&\n          (value === '' || value === undefined)\n        ) {\n          return this.session\n            .execute<boolean>(\n              /* istanbul ignore next */ function(\n                element: HTMLElement,\n                name: string\n              ) {\n                return element.hasAttribute(name);\n              },\n              [this, name]\n            )\n            .then(function(hasAttribute: boolean) {\n              return hasAttribute ? <string>value : null;\n            });\n        }\n\n        return value || null;\n      })\n      .then(function(value) {\n        // At least ios-driver 0.6.6-SNAPSHOT violates draft spec and\n        // returns boolean attributes as booleans instead of the string\n        // \"true\" or null\n        if (typeof value === 'boolean') {\n          value = value ? 'true' : null;\n        }\n\n        return value;\n      });\n  }\n\n  /**\n   * Gets an attribute of the element.\n   *\n   * See [[Element.Element.getProperty]] to retrieve an element property.\n   *\n   * @param name The name of the attribute.\n   * @returns The value of the attribute, or `null` if no such attribute\n   * exists.\n   */\n  getAttribute(name: string): CancellablePromise<string | null> {\n    if (this.session.capabilities.usesWebDriverElementAttribute) {\n      return this._get<string | null>('attribute/$0', null, [name]);\n    }\n\n    return this.session.execute<string | null>(\n      'return arguments[0].getAttribute(arguments[1]);',\n      [this, name]\n    );\n  }\n\n  /**\n   * Gets a property of the element.\n   *\n   * See [[Element.Element.getAttribute]] to retrieve an element attribute.\n   *\n   * @param name The name of the property.\n   * @returns The value of the property.\n   */\n  getProperty<T = any>(name: string): CancellablePromise<T> {\n    if (this.session.capabilities.brokenElementProperty) {\n      return this.session.execute<T>('return arguments[0][arguments[1]];', [\n        this,\n        name\n      ]);\n    }\n\n    return this._get<T>('property/$0', null, [name]).catch(() => {\n      this.session.capabilities.brokenElementProperty = true;\n      return this.getProperty<T>(name);\n    });\n  }\n\n  /**\n   * Determines if this element is equal to another element.\n   */\n  equals(other: Element): CancellablePromise<boolean> {\n    if (this.session.capabilities.noElementEquals) {\n      return this.session.execute<boolean>(\n        'return arguments[0] === arguments[1];',\n        [this, other]\n      );\n    }\n\n    const elementId = other.elementId || other;\n    return this._get<boolean>('equals/$0', null, [elementId]).catch(error => {\n      // At least Selendroid 0.9.0 does not support this command;\n      // At least ios-driver 0.6.6-SNAPSHOT April 2014 fails\n      if (\n        !this.session.capabilities.noElementEquals &&\n        (error.name === 'UnknownCommand' || error.name === 'UnknownError')\n      ) {\n        this.session.capabilities.noElementEquals = true;\n        return this.equals(other);\n      }\n\n      throw error;\n    });\n  }\n\n  /**\n   * Returns whether or not the element would be visible to an actual user.\n   * This means that the following types of elements are considered to be not\n   * displayed:\n   *\n   * 1. Elements with `display: none`\n   * 2. Elements with `visibility: hidden`\n   * 3. Elements positioned outside of the viewport that cannot be scrolled\n   *    into view\n   * 4. Elements with `opacity: 0`\n   * 5. Elements with no `offsetWidth` or `offsetHeight`\n   */\n  isDisplayed(): CancellablePromise<boolean> {\n    return this._get<boolean>('displayed').then(isDisplayed => {\n      if (\n        isDisplayed &&\n        (this.session.capabilities.brokenElementDisplayedOpacity ||\n          this.session.capabilities.brokenElementDisplayedOffscreen)\n      ) {\n        return this.session.execute<boolean>(\n          /* istanbul ignore next */ (element: HTMLElement) => {\n            const scrollX =\n              document.documentElement!.scrollLeft || document.body.scrollLeft;\n            const scrollY =\n              document.documentElement!.scrollTop || document.body.scrollTop;\n            do {\n              if (window.getComputedStyle(element).opacity === '0') {\n                return false;\n              }\n\n              const bbox = element.getBoundingClientRect();\n              if (bbox.right + scrollX <= 0 || bbox.bottom + scrollY <= 0) {\n                return false;\n              }\n            } while (\n              (element = <HTMLElement>element.parentNode) &&\n              element.nodeType === 1\n            );\n            return true;\n          },\n          [this]\n        );\n      }\n\n      return isDisplayed;\n    });\n  }\n\n  /**\n   * Gets the position of the element relative to the top-left corner of the\n   * document, taking into account scrolling and CSS transformations (if they\n   * are supported).\n   */\n  getPosition(): CancellablePromise<{ x: number; y: number }> {\n    if (this.session.capabilities.brokenElementPosition) {\n      /* jshint browser:true */\n      return this.session.execute<{\n        x: number;\n        y: number;\n      }>(\n        /* istanbul ignore next */ function(element: HTMLElement) {\n          const bbox = element.getBoundingClientRect();\n          const scrollX =\n            document.documentElement!.scrollLeft || document.body.scrollLeft;\n          const scrollY =\n            document.documentElement!.scrollTop || document.body.scrollTop;\n\n          return { x: scrollX + bbox.left, y: scrollY + bbox.top };\n        },\n        [this]\n      );\n    }\n\n    return this._get<{ x: number; y: number }>('location').then(function({\n      x,\n      y\n    }) {\n      // At least FirefoxDriver 2.41.0 incorrectly returns an object with\n      // additional `class` and `hCode` properties\n      return { x, y };\n    });\n  }\n\n  /**\n   * Gets the size of the element, taking into account CSS transformations\n   * (if they are supported).\n   */\n  getSize(): CancellablePromise<{ width: number; height: number }> {\n    const getUsingExecute = () => {\n      return this.session.execute<{\n        width: number;\n        height: number;\n      }>(\n        /* istanbul ignore next */ function(element: HTMLElement) {\n          const bbox = element.getBoundingClientRect();\n          return {\n            width: bbox.right - bbox.left,\n            height: bbox.bottom - bbox.top\n          };\n        },\n        [this]\n      );\n    };\n\n    if (this.session.capabilities.brokenCssTransformedSize) {\n      return getUsingExecute();\n    }\n\n    return this._get<{ width: number; height: number }>('size')\n      .catch(function(error) {\n        // At least ios-driver 0.6.0-SNAPSHOT April 2014 does not\n        // support this command\n        if (error.name === 'UnknownCommand') {\n          return getUsingExecute();\n        }\n\n        throw error;\n      })\n      .then(function({ width, height }) {\n        // At least ChromeDriver 2.9 incorrectly returns an object with\n        // an additional `toString` property\n        return { width, height };\n      });\n  }\n\n  /**\n   * Gets a CSS computed property value for the element.\n   *\n   * @param propertyName The CSS property to retrieve. This argument must be\n   * hyphenated, *not* camel-case.\n   */\n  getComputedStyle(propertyName: string): CancellablePromise<string> {\n    const manualGetStyle = () => {\n      return this.session.execute<string>(\n        /* istanbul ignore next */ (element: any, propertyName: string) => {\n          return (<any>window.getComputedStyle(element))[propertyName];\n        },\n        [this, propertyName]\n      );\n    };\n\n    let promise: CancellablePromise<string>;\n\n    if (this.session.capabilities.brokenComputedStyles) {\n      promise = manualGetStyle();\n    } else {\n      promise = this._get<string>('css/$0', null, [propertyName]).catch(\n        function(error) {\n          // At least Selendroid 0.9.0 does not support this command\n          if (error.name === 'UnknownCommand') {\n            return manualGetStyle();\n          } else if (\n            error.name === 'UnknownError' &&\n            error.message.indexOf('failed to parse value') > -1\n          ) {\n            // At least ChromeDriver 2.9 incorrectly returns an error\n            // for property names it does not understand\n            return '';\n          }\n\n          throw error;\n        }\n      );\n    }\n\n    return promise.then(function(value) {\n      // At least ChromeDriver 2.9 and Selendroid 0.9.0 returns colour\n      // values as rgb instead of rgba\n      if (value) {\n        value = value.replace(/(.*\\b)rgb\\((\\d+,\\s*\\d+,\\s*\\d+)\\)(.*)/g, function(\n          _,\n          prefix,\n          rgb,\n          suffix\n        ) {\n          return prefix + 'rgba(' + rgb + ', 1)' + suffix;\n        });\n      }\n\n      // For consistency with Firefox, missing values are always returned\n      // as empty strings\n      return value != null ? value : '';\n    });\n  }\n\n  /**\n   * Gets the first [[Element.Element.isDisplayed|displayed]] element inside\n   * this element matching the given query. This is inherently slower than\n   * [[Element.Element.find]], so should only be used in cases where the\n   * visibility of an element cannot be ensured in advance.\n   *\n   * @since 1.6\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  findDisplayed(using: Strategy, value: string): CancellablePromise<Element> {\n    return findDisplayed(this.session, this, using, value);\n  }\n\n  /**\n   * Waits for all elements inside this element that match the given query to\n   * be destroyed.\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  waitForDeleted(strategy: Strategy, value: string) {\n    return waitForDeleted(this.session, this, strategy, value);\n  }\n}\n\nfunction noop() {\n  // At least ios-driver 0.6.6 returns an empty object for methods that are\n  // supposed to return no value at all, which is not correct\n}\n\nexport type ElementOrElementId =\n  | { ELEMENT: string }\n  | { 'element-6066-11e4-a52e-4f735466cecf': string }\n  | Element\n  | string;\n"]}