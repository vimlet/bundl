{"version":3,"file":"findDisplayed.js","sourceRoot":"","sources":["../../../src/lib/findDisplayed.ts"],"names":[],"mappings":";;AAAA,4CAA6D;AAC7D,6CAAwC;AAKxC;;;;;GAKG;AACH,SAAwB,aAAa,CACnC,OAAgB,EAChB,OAA0B,EAC1B,QAAkB,EAClB,KAAa;IAEb,OAAO,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAA,eAAe;QACxD,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,SAAS,IAAI;YACX,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;gBACnD,uDAAuD;gBACvD,0DAA0D;gBAC1D,yBAAyB;gBACzB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX,SAAS,YAAY;oBACnB,IAAM,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9B,IAAI,OAAO,EAAE;wBACX,OAAO,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAA,WAAW;4BAC3C,IAAI,WAAW,EAAE;gCACf,OAAO,OAAO,CAAC;6BAChB;iCAAM;gCACL,OAAO,YAAY,EAAE,CAAC;6BACvB;wBACH,CAAC,CAAC,CAAC;qBACJ;gBACH,CAAC;gBAED,OAAO,aAAI,CAAC,OAAO,CAAiB,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBAC9D,IAAI,OAAO,EAAE;wBACX,OAAO,OAAO,CAAC;qBAChB;yBAAM,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,GAAG,eAAe,EAAE;wBACnD,IAAM,KAAK,GAAQ,IAAI,KAAK,EAAE,CAAC;wBAC/B,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBACxC,KAAK,CAAC,IAAI,GAAS,qBAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjD,KAAK,CAAC,OAAO,GAAS,qBAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpD,MAAM,KAAK,CAAC;qBACb;yBAAM;wBACL,OAAO,IAAI,EAAE,CAAC;qBACf;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC;AA9CD,gCA8CC","sourcesContent":["import { Task, CancellablePromise } from '@theintern/common';\nimport statusCodes from './statusCodes';\nimport Element from '../Element';\nimport Session from '../Session';\nimport { Strategy } from './Locator';\n\n/**\n * Gets the first [[Element.isDisplayed|displayed]] element inside this element\n * matching the given query. This is inherently slower than [[Element.find]],\n * so should only be used in cases where the visibility of an element cannot be\n * ensured in advance.\n */\nexport default function findDisplayed(\n  session: Session,\n  locator: Session | Element,\n  strategy: Strategy,\n  value: string\n) {\n  return session.getTimeout('implicit').then(originalTimeout => {\n    const startTime = Date.now();\n\n    function poll(): CancellablePromise<Element> {\n      return locator.findAll(strategy, value).then(elements => {\n        // Due to concurrency issues with at least ChromeDriver\n        // 2.16, each element must be tested one at a time instead\n        // of using `Promise.all`\n        let i = -1;\n        function checkElement(): PromiseLike<Element | void> | undefined {\n          const element = elements[++i];\n          if (element) {\n            return element.isDisplayed().then(isDisplayed => {\n              if (isDisplayed) {\n                return element;\n              } else {\n                return checkElement();\n              }\n            });\n          }\n        }\n\n        return Task.resolve<Element | void>(checkElement()).then(element => {\n          if (element) {\n            return element;\n          } else if (Date.now() - startTime > originalTimeout) {\n            const error: any = new Error();\n            error.status = elements.length ? 11 : 7;\n            error.name = (<any>statusCodes)[error.status][0];\n            error.message = (<any>statusCodes)[error.status][1];\n            throw error;\n          } else {\n            return poll();\n          }\n        });\n      });\n    }\n\n    return poll();\n  });\n}\n"]}