{"version":3,"file":"SauceLabsTunnel.js","sourceRoot":"","sources":["../../src/SauceLabsTunnel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,mCAKkB;AAElB,yBAAuD;AACvD,yBAA4B;AAC5B,6BAA4B;AAC5B,4CAAgE;AAChE,2BAAkE;AAClE,mCAAkD;AAElD,IAAM,SAAS,GAAG,OAAO,CAAC;AAE1B;;;;;;;;;GASG;AACH;IAA6C,mCAAM;IAgGjD,yBAAY,OAA0B;eACpC,kBACE,MAAM,CAAC,MAAM,CACX;YACE,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,gBAAgB;YACvC,aAAa,EAAE,EAAE;YACjB,SAAS,EAAE,WAAI,CAAC,SAAS,EAAE,WAAW,CAAC;YACvC,oBAAoB,EAAE,EAAE;YACxB,cAAc,EACZ,wDAAwD;YAC1D,eAAe,EAAE,EAAE;YACnB,cAAc,EAAE,KAAK;YACrB,eAAe,EAAE,CAAC;YAClB,SAAS,WAAA;YACT,cAAc,EAAE,EAAE;YAClB,aAAa,EAAE,EAAE;YACjB,iBAAiB,EAAE,KAAK;YACxB,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;SACrC,EACD,OAAO,IAAI,EAAE,CACd,CACF;IACH,CAAC;IAED,sBAAI,iCAAI;aAAR;YACE,OAAO,CAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,WAAI,IAAI,CAAC,SAAS,IAAI,EAAE,CAAE,CAAC;QAC1D,CAAC;;;OAAA;IAED,sBAAI,uCAAU;aAAd;YACE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YACpE,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvC,IACE,QAAQ,KAAK,KAAK;gBAClB,QAAQ,KAAK,OAAO;gBACpB,CAAC,QAAQ,KAAK,OAAO,IAAI,YAAY,KAAK,KAAK,CAAC,EAChD;gBACA,OAAO,WAAI,CACT,IAAI,CAAC,SAAS,EACd,KAAK;oBACH,IAAI,CAAC,SAAS;oBACd,GAAG;oBACH,QAAQ;oBACR,SAAS;oBACT,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CACvC,CAAC;aACH;iBAAM;gBACL,OAAO,MAAM,CAAC;aACf;QACH,CAAC;;;OAAA;IAED,sBAAI,8CAAiB;aAArB;YACE,IAAM,YAAY,GAAQ,EAAE,CAAC;YAE7B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,YAAY,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;aACnD;YAED,OAAO,YAAY,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAI,yCAAY;aAAhB;YACE,OAAO,iBAAU,CACf,IAAI,CAAC,UAAU,KAAK,MAAM;gBACxB,CAAC,CAAC,WAAI,CAAC,IAAI,CAAC,SAAS,EAAE,mBAAmB,CAAC;gBAC3C,CAAC,CAAC,WAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAC1B,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAI,gCAAG;aAAP;YACE,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YACpE,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,GAAG,GAAG,qCAAqC,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YAEvE,IAAI,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,OAAO,EAAE;gBAC9C,GAAG,IAAI,QAAQ,GAAG,MAAM,CAAC;aAC1B;iBAAM,IAAI,QAAQ,KAAK,OAAO,IAAI,YAAY,KAAK,KAAK,EAAE;gBACzD,GAAG,IAAI,QAAQ,GAAG,SAAS,CAAC;aAC7B;iBAAM;gBACL,8DAA8D;gBAC9D,kDAAkD;gBAClD,GAAG,GAAG,2DAA2D,CAAC;aACnE;YAED,OAAO,GAAG,CAAC;QACb,CAAC;;;OAAA;IAES,2CAAiB,GAA3B,UACE,IAAY,EACZ,OAAyB;QAF3B,iBASC;QALC,OAAO,iBAAM,iBAAiB,YAAC,IAAI,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;YACjD,IAAI,KAAI,CAAC,UAAU,KAAK,MAAM,EAAE;gBAC9B,cAAS,CAAC,KAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;aACjD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAES,yCAAe,GAAzB,UAA0B,KAAW;QACnC,IAAM,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAEzD,IAAI,KAAK,EAAE;YACT,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;aAC7B;YAED,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;aAC7B;YACD;;qBAEA;SACD;QAED,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE;YACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,UAAS,MAAM;gBAC/C,IAAM,GAAG,GAAG,WAAQ,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAK,GAAG,CAAC,QAAQ,SAAI,GAAG,CAAC,IAAI,SAAI,GAAG,CAAC,IAAM,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,eAAe;YAClB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhC,OAAO,IAAI,CAAC;IACd,CAAC;IAES,uCAAa,GAAvB,UAAwB,KAAW;QACjC,IAAM,IAAI,GAAG,CAAC,MAAM,EAAE,mBAAmB,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1E,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEhC,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,QAAQ;gBACZ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEzE,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACzC;YACD;;;qBAGA;SACD;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAES,mCAAS,GAAnB,UAAoB,SAAiB;QACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;SACvE;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,WAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QAC5D,IAAM,IAAI,GACR,IAAI,CAAC,UAAU,KAAK,MAAM;YACxB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YAC3B,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,CAAC,MAAM;YACzB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,MAAM;YACxB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAa,EAAE,IAAc;QACxC,IAAI,GAAG,GAAG,WAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,gCAAgC,CAAC,CAAC;QACrE,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;QAChD,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;QAEjD,IAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;YAC7B,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,aAAa,EAAE,IAAI,CAAC,KAAK;YACzB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,OAAO;YACpB,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC,CAAC;QAEH,OAAO,gBAAO,CAAC,YAAS,CAAC,GAAG,CAAC,EAAE;YAC7B,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,OAAO;YACb,OAAO,EAAE;gBACP,gBAAgB,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC5D,cAAc,EAAE,mCAAmC;aACpD;YACD,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC,IAAI,CAAC,UAAS,QAAQ;YACvB,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI;gBAC9B,IAAI,IAAI,EAAE;oBACR,IAAM,MAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAE9B,IAAI,MAAI,CAAC,KAAK,EAAE;wBACd,MAAM,IAAI,KAAK,CAAC,MAAI,CAAC,KAAK,CAAC,CAAC;qBAC7B;oBAED,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;wBAC3B,MAAM,IAAI,KAAK,CAAC,qBAAmB,QAAQ,CAAC,MAAM,eAAU,IAAM,CAAC,CAAC;qBACrE;iBACF;qBAAM;oBACL,MAAM,IAAI,KAAK,CACb,qBAAmB,QAAQ,CAAC,MAAM,yBAAsB,CACzD,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAES,gCAAM,GAAhB,UAAiB,QAAuB;QAAxC,iBAgJC;QA/IC,IAAM,SAAS,GAAG,WAAI,CAAC,WAAM,EAAE,EAAE,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAE5D,IAAI,WAAuD,CAAC;QAC5D,IAAI,kBAAgD,CAAC;QACrD,IAAI,kBAAgD,CAAC;QACrD,IAAI,UAAwC,CAAC;QAE7C,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAC,KAAK,EAAE,OAAO,EAAE,MAAM;YAClD,kBAAkB,GAAG,UAAC,OAAe;gBACnC,SAAS,IAAI,CAAC,OAAe;oBAC3B,MAAM,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC3B,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,+DAA+D;gBAC/D,IAAI,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;oBAC9C,IAAI;wBACF,IAAM,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAC5C,IAAI,KAAK,EAAE;4BACT,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACzB;qBACF;oBAAC,OAAO,KAAK,EAAE;wBACd,sDAAsD;wBACtD,8BAA8B;qBAC/B;iBACF;gBAED,IAAI,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBACpC,sBAAsB;oBACtB,IACE,gCAAgC,CAAC,IAAI,CAAC,OAAO,CAAC;wBAC9C,kCAAkC,CAAC,IAAI,CAAC,OAAO,CAAC;wBAChD,sCAAsC,CAAC,IAAI,CAAC,OAAO,CAAC,EACpD;wBACA,OAAO,KAAK,CAAC;qBACd;oBACD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC9C;gBAED,0DAA0D;gBAC1D,yDAAyD;gBACzD,sDAAsD;gBACtD,aAAa;gBACb,IACE,OAAO,CAAC,OAAO,CAAC,gDAAgD,CAAC;oBACjE,CAAC,EACD;oBACA,OAAO,EAAE,CAAC;oBACV,OAAO,IAAI,CAAC;iBACb;gBAED,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC,CAAC;YAEF,kBAAkB,GAAG,UAAS,OAAe;gBAC3C,kBAAkB;gBAClB,IAAI,OAAO,CAAC,OAAO,CAAC,2CAA2C,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrE,uDAAuD;oBACvD,kDAAkD;oBAClD,WAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACjB;gBAED,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC,CAAC;YAEF,UAAU,GAAG,UAAC,OAAe;gBAC3B,IACE,OAAO;oBACP,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBACzC,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;oBAC7C,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC;oBACtC,OAAO,CAAC,OAAO,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;oBACrD,kBAAkB;oBAClB,OAAO,CAAC,OAAO,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC,EAClD;oBACA,KAAI,CAAC,IAAI,CAAC;wBACR,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,KAAI;wBACZ,MAAM,EAAE,OAAO;qBAChB,CAAC,CAAC;iBACJ;gBAED,OAAO,KAAK,CAAC;YACf,CAAC,CAAC;YAEF,WAAW,GAAG,kBAAkB,CAAC;YAEjC,oEAAoE;YACpE,iEAAiE;YACjE,sCAAsC;YACtC,cAAS,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,UAC1D,OAAO,EACP,QAAQ;gBAER,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACpD,sDAAsD;oBACtD,OAAO;iBACR;gBAED,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;YAEH,8DAA8D;YAC9D,mEAAmE;YACnE,iDAAiD;YACjD,KAAI,CAAC,OAAO,GAAG,SAAE,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,UAAS,IAAY;gBAC3D,IAAI,CAAC,WAAW,EAAE;oBAChB,OAAO;iBACR;gBAED,MAAM,CAAC,IAAI,CAAC;qBACT,KAAK,CAAC,IAAI,CAAC;qBACX,IAAI,CAAC,UAAA,OAAO;oBACX,kDAAkD;oBAClD,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACzC,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;wBAClB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;qBACxC;oBACD,OAAO,WAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;gBACtC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QACnC,CAAC,EAAE,SAAS,CAAC,CAAC;QAEd,IAAI;aACD,IAAI,CAAC;YACJ,gBAAW,CAAC,SAAS,CAAC,CAAC;YAEvB,2DAA2D;YAC3D,wDAAwD;YACxD,0BAA0B;YAC1B,WAAW,GAAG,UAAU,CAAC;YAEzB,kBAAkB,CAAC,EAAE,CAAC,CAAC;YACvB,WAAW,GAAG,SAAS,CAAC;QAC1B,CAAC,CAAC;aACD,KAAK,CAAC;YACL,gDAAgD;QAClD,CAAC,CAAC,CAAC;QAEL,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;;;;;;;;;;;;OAkBG;IACO,+CAAqB,GAA/B,UAAgC,WAAgB;QAC9C,IAAM,UAAU,GAAQ;YACtB,cAAc,EAAE,YAAY;YAC5B,cAAc,EAAE,WAAW;YAC3B,cAAc,EAAE,WAAW;YAC3B,iBAAiB,EAAE,aAAa;YAChC,YAAY,EAAE,YAAY;SAC3B,CAAC;QAEF,IAAM,UAAU,GAAQ;YACtB,aAAa,EAAE,eAAe;SAC/B,CAAC;QAEF,IAAI,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC;QACxB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,eAAmC,CAAC;QACxC,IAAI,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/B,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YAC1B,YAAY,GAAG,SAAS,CAAC;YACzB,eAAe,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC/C;aAAM,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAClC,YAAY,GAAG,MAAM,CAAC;YACtB,eAAe,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC3C;QAED,IAAM,QAAQ,GACZ,YAAY,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,GAAG,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAChE,IAAM,WAAW,GACf,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC;QAC3D,IAAM,OAAO,GAAG,WAAW,CAAC,aAAa,CAAC;QAE1C,OAAO;YACL,QAAQ,UAAA;YACR,YAAY,cAAA;YACZ,eAAe,iBAAA;YAEf,WAAW,aAAA;YACX,cAAc,EAAE,OAAO;YACvB,OAAO,SAAA;YAEP,UAAU,EAAE,WAAW;YAEvB,MAAM,EAAE;gBACN,QAAQ,UAAA;gBACR,WAAW,aAAA;gBACX,OAAO,SAAA;aACR;SACF,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAAC,AA1hBD,CAA6C,gBAAM,GA0hBlD","sourcesContent":["import Tunnel, {\n  TunnelProperties,\n  DownloadOptions,\n  ChildExecutor,\n  NormalizedEnvironment\n} from './Tunnel';\nimport { JobState } from './interfaces';\nimport { chmodSync, watchFile, unwatchFile } from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'path';\nimport { CancellablePromise, request } from '@theintern/common';\nimport { format as formatUrl, parse as parseUrl, Url } from 'url';\nimport { fileExists, kill, on } from './lib/util';\n\nconst scVersion = '4.5.3';\n\n/**\n * A Sauce Labs tunnel. This tunnel uses Sauce Connect 4 on platforms where it\n * is supported, and Sauce Connect 3 on all other platforms.\n *\n * The accessKey and username properties will be initialized using\n * SAUCE_ACCESS_KEY and SAUCE_USERNAME.\n *\n * See [[SauceLabsTunnel.SauceLabsProperties]] for a list of options specific to\n * this tunnel class.\n */\nexport default class SauceLabsTunnel extends Tunnel\n  implements SauceLabsProperties {\n  accessKey!: string;\n\n  /**\n   * A list of domains that should not be proxied by the tunnel on the remote\n   * VM.\n   */\n  directDomains!: string[];\n\n  /**\n   * A list of domains that will be proxied by the tunnel on the remote VM.\n   */\n  tunnelDomains!: string[];\n\n  /**\n   * A list of URLs that require additional HTTP authentication. Only the\n   * hostname, port, and auth are used. This property is only supported by\n   * Sauce Connect 4 tunnels.\n   */\n  domainAuthentication!: string[];\n\n  /**\n   * A list of regular expressions corresponding to domains whose connections\n   * should fail immediately if the VM attempts to make a connection to them.\n   */\n  fastFailDomains!: string[];\n\n  /**\n   * Allows the tunnel to also be used by sub-accounts of the user that\n   * started the tunnel.\n   */\n  isSharedTunnel!: boolean;\n\n  /** A filename where additional logs from the tunnel should be output. */\n  logFile: string | undefined;\n\n  /**\n   * The absolute filepath (or URL) of a file which Sauce Connect should use\n   * for additional proxy configuration. Sauce Connect suggests using either\n   * this or `proxy`, but not both.\n   */\n  pacFile: string | undefined;\n\n  /** A filename where Sauce Connect stores its process information. */\n  pidFile: string | undefined;\n\n  /**\n   * Specifies the maximum log filesize before rotation, in bytes. This\n   * property is only supported by Sauce Connect 3 tunnels.\n   */\n  logFileSize: number | undefined;\n\n  /**\n   * Log statistics about HTTP traffic every `logTrafficStats` milliseconds.\n   * This property is only supported by Sauce Connect 4 tunnels.\n   */\n  logTrafficStats!: number;\n\n  /**\n   * An alternative URL for the Sauce REST API. This property is only\n   * supported by Sauce Connect 3 tunnels.\n   */\n  restUrl: string | undefined;\n\n  /**\n   * A list of domains that should not have their SSL connections re-encrypted\n   * when going through the tunnel.\n   */\n  skipSslDomains!: string[];\n\n  /**\n   * An additional set of options to use with the Squid proxy for the remote\n   * VM. This property is only supported by Sauce Connect 3 tunnels.\n   */\n  squidOptions: string | undefined;\n\n  /**\n   * Whether or not to use the proxy defined at [[Tunnel.proxy]] for the\n   * tunnel connection itself.\n   */\n  useProxyForTunnel!: boolean;\n\n  /**\n   * Overrides the version of the VM created on Sauce Labs. This property is\n   * only supported by Sauce Connect 3 tunnels.\n   */\n  vmVersion: string | undefined;\n\n  /**\n   * The version of Sauce Connect that should be used\n   */\n  scVersion!: string;\n\n  username!: string;\n\n  constructor(options?: SauceLabsOptions) {\n    super(\n      Object.assign(\n        {\n          accessKey: process.env.SAUCE_ACCESS_KEY,\n          directDomains: [],\n          directory: join(__dirname, 'saucelabs'),\n          domainAuthentication: [],\n          environmentUrl:\n            'https://saucelabs.com/rest/v1/info/platforms/webdriver',\n          fastFailDomains: [],\n          isSharedTunnel: false,\n          logTrafficStats: 0,\n          scVersion,\n          skipSslDomains: [],\n          tunnelDomains: [],\n          useProxyForTunnel: false,\n          username: process.env.SAUCE_USERNAME\n        },\n        options || {}\n      )\n    );\n  }\n\n  get auth() {\n    return `${this.username || ''}:${this.accessKey || ''}`;\n  }\n\n  get executable() {\n    const platform = this.platform === 'darwin' ? 'osx' : this.platform;\n    const architecture = this.architecture;\n\n    if (\n      platform === 'osx' ||\n      platform === 'win32' ||\n      (platform === 'linux' && architecture === 'x64')\n    ) {\n      return join(\n        this.directory,\n        'sc-' +\n          this.scVersion +\n          '-' +\n          platform +\n          '/bin/sc' +\n          (platform === 'win32' ? '.exe' : '')\n      );\n    } else {\n      return 'java';\n    }\n  }\n\n  get extraCapabilities() {\n    const capabilities: any = {};\n\n    if (this.tunnelId) {\n      capabilities['tunnel-identifier'] = this.tunnelId;\n    }\n\n    return capabilities;\n  }\n\n  get isDownloaded() {\n    return fileExists(\n      this.executable === 'java'\n        ? join(this.directory, 'Sauce-Connect.jar')\n        : join(this.executable)\n    );\n  }\n\n  get url() {\n    const platform = this.platform === 'darwin' ? 'osx' : this.platform;\n    const architecture = this.architecture;\n    let url = 'https://saucelabs.com/downloads/sc-' + this.scVersion + '-';\n\n    if (platform === 'osx' || platform === 'win32') {\n      url += platform + '.zip';\n    } else if (platform === 'linux' && architecture === 'x64') {\n      url += platform + '.tar.gz';\n    } else {\n      // Sauce Connect 3 uses Java so should be able to run on other\n      // platforms that Sauce Connect 4 does not support\n      url = 'https://saucelabs.com/downloads/Sauce-Connect-3.1-r32.zip';\n    }\n\n    return url;\n  }\n\n  protected _postDownloadFile(\n    data: Buffer,\n    options?: DownloadOptions\n  ): Promise<void> {\n    return super._postDownloadFile(data, options).then(() => {\n      if (this.executable !== 'java') {\n        chmodSync(this.executable, parseInt('0755', 8));\n      }\n    });\n  }\n\n  protected _makeNativeArgs(proxy?: Url): string[] {\n    const args = ['-u', this.username, '-k', this.accessKey];\n\n    if (proxy) {\n      if (proxy.host) {\n        args.push('-p', proxy.host);\n      }\n\n      if (proxy.auth) {\n        args.push('-w', proxy.auth);\n      }\n      /*else if (proxy.username) {\n\t\t\t\targs.push('-w', proxy.username + ':' + proxy.password);\n\t\t\t}*/\n    }\n\n    if (this.domainAuthentication.length) {\n      this.domainAuthentication.forEach(function(domain) {\n        const url = parseUrl(domain);\n        args.push('-a', `${url.hostname}:${url.port}:${url.auth}`);\n      });\n    }\n\n    this.logTrafficStats &&\n      args.push('-z', String(Math.floor(this.logTrafficStats / 1000)));\n    this.verbose && args.push('-v');\n\n    return args;\n  }\n\n  protected _makeJavaArgs(proxy?: Url): string[] {\n    const args = ['-jar', 'Sauce-Connect.jar', this.username, this.accessKey];\n\n    this.logFileSize && args.push('-g', String(this.logFileSize));\n    this.squidOptions && args.push('-S', this.squidOptions);\n    this.verbose && args.push('-d');\n\n    if (proxy) {\n      proxy.hostname &&\n        args.push('-p', proxy.hostname + (proxy.port ? ':' + proxy.port : ''));\n\n      if (proxy.auth) {\n        const auth = proxy.auth.split(':');\n        args.push('-u', auth[0], '-X', auth[1]);\n      }\n      /*else {\n\t\t\t\tproxy.username && args.push('-u', proxy.username);\n\t\t\t\tproxy.password && args.push('-X', proxy.password);\n\t\t\t}*/\n    }\n\n    return args;\n  }\n\n  protected _makeArgs(readyFile: string): string[] {\n    if (!this.username || !this.accessKey) {\n      throw new Error('SauceLabsTunnel requires a username and access key');\n    }\n\n    const proxy = this.proxy ? parseUrl(this.proxy) : undefined;\n    const args =\n      this.executable === 'java'\n        ? this._makeJavaArgs(proxy)\n        : this._makeNativeArgs(proxy);\n\n    args.push('-P', this.port, '-f', readyFile);\n\n    this.directDomains.length && args.push('-D', this.directDomains.join(','));\n    this.tunnelDomains.length && args.push('-t', this.tunnelDomains.join(','));\n    this.fastFailDomains.length &&\n      args.push('-F', this.fastFailDomains.join(','));\n    this.isSharedTunnel && args.push('-s');\n    this.logFile && args.push('-l', this.logFile);\n    this.pacFile && args.push('--pac', this.pacFile);\n    this.pidFile && args.push('--pidfile', this.pidFile);\n    this.restUrl && args.push('-x', this.restUrl);\n    this.skipSslDomains.length &&\n      args.push('-B', this.skipSslDomains.join(','));\n    this.tunnelId && args.push('-i', this.tunnelId);\n    this.useProxyForTunnel && args.push('-T');\n    this.vmVersion && args.push('-V', this.vmVersion);\n\n    return args;\n  }\n\n  sendJobState(jobId: string, data: JobState): CancellablePromise<void> {\n    let url = parseUrl(this.restUrl || 'https://saucelabs.com/rest/v1/');\n    url.auth = this.username + ':' + this.accessKey;\n    url.pathname += this.username + '/jobs/' + jobId;\n\n    const payload = JSON.stringify({\n      build: data.buildId,\n      'custom-data': data.extra,\n      name: data.name,\n      passed: data.success,\n      public: data.visibility,\n      tags: data.tags\n    });\n\n    return request(formatUrl(url), {\n      method: 'put',\n      data: payload,\n      headers: {\n        'Content-Length': String(Buffer.byteLength(payload, 'utf8')),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      password: this.accessKey,\n      username: this.username,\n      proxy: this.proxy\n    }).then(function(response) {\n      return response.text().then(text => {\n        if (text) {\n          const data = JSON.parse(text);\n\n          if (data.error) {\n            throw new Error(data.error);\n          }\n\n          if (response.status !== 200) {\n            throw new Error(`Server reported ${response.status} with: ${text}`);\n          }\n        } else {\n          throw new Error(\n            `Server reported ${response.status} with no other data.`\n          );\n        }\n      });\n    });\n  }\n\n  protected _start(executor: ChildExecutor) {\n    const readyFile = join(tmpdir(), 'saucelabs-' + Date.now());\n\n    let readMessage: ((message: string) => boolean) | undefined;\n    let readStartupMessage: (message: string) => boolean;\n    let readRunningMessage: (message: string) => boolean;\n    let readStatus: (message: string) => boolean;\n\n    const task = this._makeChild((child, resolve, reject) => {\n      readStartupMessage = (message: string) => {\n        function fail(message: string) {\n          reject(new Error(message));\n          return true;\n        }\n\n        // These messages contain structured data we can try to consume\n        if (message.indexOf('Error: response: ') === 0) {\n          try {\n            const error = /(\\{[\\s\\S]*\\})/.exec(message);\n            if (error) {\n              const data = JSON.parse(error[1]);\n              return fail(data.error);\n            }\n          } catch (error) {\n            // It seems parsing did not work so well; fall through\n            // to the normal error handler\n          }\n        }\n\n        if (message.indexOf('Error: ') === 0) {\n          // skip known warnings\n          if (\n            /open file limit \\d+ is too low/.test(message) ||\n            /Sauce Labs recommends setting it/.test(message) ||\n            /HTTP response code indicated failure/.test(message)\n          ) {\n            return false;\n          }\n          return fail(message.slice('Error: '.length));\n        }\n\n        // At least Sauce Connect 4.4.12 on macOS 10.10.13 doesn't\n        // update the readyfile when the tunnel is ready. Use the\n        // 'Selenium listener' message as an alternate startup\n        // indicator.\n        if (\n          message.indexOf('Sauce Connect is up, you may start your tests.') ===\n          0\n        ) {\n          resolve();\n          return true;\n        }\n\n        return readStatus(message);\n      };\n\n      readRunningMessage = function(message: string) {\n        // Sauce Connect 3\n        if (message.indexOf('Problem connecting to Sauce Labs REST API') > -1) {\n          // It will just keep trying and trying and trying for a\n          // while, but it is a failure, so force it to stop\n          kill(child.pid);\n        }\n\n        return readStatus(message);\n      };\n\n      readStatus = (message: string) => {\n        if (\n          message &&\n          message.indexOf('Please wait for') === -1 &&\n          message.indexOf('Sauce Connect is up') === -1 &&\n          message.indexOf('Sauce Connect') !== 0 &&\n          message.indexOf('Using CA certificate bundle') === -1 &&\n          // Sauce Connect 3\n          message.indexOf('You may start your tests') === -1\n        ) {\n          this.emit({\n            type: 'status',\n            target: this,\n            status: message\n          });\n        }\n\n        return false;\n      };\n\n      readMessage = readStartupMessage;\n\n      // Polling API is used because we are only watching for one file, so\n      // efficiency is not a big deal, and the `fs.watch` API has extra\n      // restrictions which are best avoided\n      watchFile(readyFile, { persistent: false, interval: 1007 }, function(\n        current,\n        previous\n      ) {\n        if (Number(current.mtime) === Number(previous.mtime)) {\n          // readyFile hasn't been modified, so ignore the event\n          return;\n        }\n\n        resolve();\n      });\n\n      // Sauce Connect exits with a zero status code when there is a\n      // failure, and outputs error messages to stdout, like a boss. Even\n      // better, it uses the \"Error:\" tag for warnings.\n      this._handle = on(child.stdout, 'data', function(data: string) {\n        if (!readMessage) {\n          return;\n        }\n\n        String(data)\n          .split('\\n')\n          .some(message => {\n            // Get rid of the date/time prefix on each message\n            const delimiter = message.indexOf(' - ');\n            if (delimiter > -1) {\n              message = message.slice(delimiter + 3);\n            }\n            return readMessage!(message.trim());\n          });\n      });\n\n      executor(child, resolve, reject);\n    }, readyFile);\n\n    task\n      .then(() => {\n        unwatchFile(readyFile);\n\n        // We have to watch for errors until the tunnel has started\n        // successfully at which point we only want to watch for\n        // status messages to emit\n        readMessage = readStatus;\n\n        readRunningMessage('');\n        readMessage = undefined;\n      })\n      .catch(() => {\n        // Ignore errors here; they're handled elsewhere\n      });\n\n    return task;\n  }\n\n  /**\n   * Attempt to normalize a SauceLabs described environment with the standard\n   * Selenium capabilities\n   *\n   * SauceLabs returns a list of environments that looks like:\n   *\n   * {\n   *     \"short_version\": \"25\",\n   *     \"long_name\": \"Firefox\",\n   *     \"api_name\": \"firefox\",\n   *     \"long_version\": \"25.0b2.\",\n   *     \"latest_stable_version\": \"\",\n   *     \"automation_backend\": \"webdriver\",\n   *     \"os\": \"Windows 2003\"\n   * }\n   *\n   * @param environment a SauceLabs environment descriptor\n   * @returns a normalized descriptor\n   */\n  protected _normalizeEnvironment(environment: any): NormalizedEnvironment {\n    const windowsMap: any = {\n      'Windows 2003': 'Windows XP',\n      'Windows 2008': 'Windows 7',\n      'Windows 2012': 'Windows 8',\n      'Windows 2012 R2': 'Windows 8.1',\n      'Windows 10': 'Windows 10'\n    };\n\n    const browserMap: any = {\n      microsoftedge: 'MicrosoftEdge'\n    };\n\n    let os = environment.os;\n    let platformName = os;\n    let platformVersion: string | undefined;\n    if (os.indexOf('Windows') === 0) {\n      os = windowsMap[os] || os;\n      platformName = 'Windows';\n      platformVersion = os.slice('Windows '.length);\n    } else if (os.indexOf('Mac') === 0) {\n      platformName = 'OS X';\n      platformVersion = os.slice('Mac '.length);\n    }\n\n    const platform =\n      platformName + (platformVersion ? ' ' + platformVersion : '');\n    const browserName =\n      browserMap[environment.api_name] || environment.api_name;\n    const version = environment.short_version;\n\n    return {\n      platform,\n      platformName,\n      platformVersion,\n\n      browserName,\n      browserVersion: version,\n      version,\n\n      descriptor: environment,\n\n      intern: {\n        platform,\n        browserName,\n        version\n      }\n    };\n  }\n}\n\n/**\n * Options specific to the SauceLabsTunnel\n */\nexport interface SauceLabsProperties extends TunnelProperties {\n  /** [[SauceLabsTunnel.SauceLabsTunnel.directDomains|More info]] */\n  directDomains: string[];\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.tunnelDomains|More info]] */\n  tunnelDomains: string[];\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.domainAuthentication|More info]] */\n  domainAuthentication: string[];\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.fastFailDomains|More info]] */\n  fastFailDomains: string[];\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.isSharedTunnel|More info]] */\n  isSharedTunnel: boolean;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.logFile|More info]] */\n  logFile: string | undefined;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.pacFile|More info]] */\n  pacFile: string | undefined;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.pidFile|More info]] */\n  pidFile: string | undefined;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.logFileSize|More info]] */\n  logFileSize: number | undefined;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.logTrafficStats|More info]] */\n  logTrafficStats: number;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.restUrl|More info]] */\n  restUrl: string | undefined;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.skipSslDomains|More info]] */\n  skipSslDomains: string[];\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.squidOptions|More info]] */\n  squidOptions: string | undefined;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.useProxyForTunnel|More info]] */\n  useProxyForTunnel: boolean;\n\n  /** [[SauceLabsTunnel.SauceLabsTunnel.vmVersion|More info]] */\n  vmVersion: string | undefined;\n}\n\nexport type SauceLabsOptions = Partial<SauceLabsProperties>;\n"]}