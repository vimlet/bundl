(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "./TextCoverage", "./Reporter"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var TextCoverage_1 = require("./TextCoverage");
    var Reporter_1 = require("./Reporter");
    var Simple = (function (_super) {
        tslib_1.__extends(Simple, _super);
        function Simple() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Simple.prototype.error = function (error) {
            this.console.error(this.formatError(error));
        };
        Simple.prototype.log = function (message) {
            var _this = this;
            message.split('\n').forEach(function (line) {
                _this.console.log("DEBUG: " + line);
            });
        };
        Simple.prototype.suiteEnd = function (suite) {
            if (suite.error) {
                this.console.warn('SUITE ERROR');
                this.console.error(this.formatError(suite.error));
            }
            else {
                var numTests = suite.numTests;
                var numFailedTests = suite.numFailedTests;
                var numSkippedTests = suite.numSkippedTests;
                var message = numFailedTests + "/" + numTests + " tests failed";
                if (suite.name) {
                    message += " in " + suite.name;
                }
                if (numSkippedTests > 0) {
                    message += " (" + numSkippedTests + " skipped)";
                }
                this.console[numFailedTests ? 'warn' : 'info'](message);
            }
        };
        Simple.prototype.testEnd = function (test) {
            if (test.error) {
                this.console.error("FAIL: " + test.id + " (" + test.timeElapsed + "ms)");
                this.console.error(this.formatError(test.error, { space: '  ' }));
            }
            else if (test.skipped) {
                this.console.log("SKIP: " + test.id + " (" + test.skipped + ")");
            }
            else {
                this.console.log("PASS: " + test.id + " (" + test.timeElapsed + "ms)");
            }
        };
        tslib_1.__decorate([
            Reporter_1.eventHandler()
        ], Simple.prototype, "error", null);
        tslib_1.__decorate([
            Reporter_1.eventHandler()
        ], Simple.prototype, "log", null);
        tslib_1.__decorate([
            Reporter_1.eventHandler()
        ], Simple.prototype, "suiteEnd", null);
        tslib_1.__decorate([
            Reporter_1.eventHandler()
        ], Simple.prototype, "testEnd", null);
        return Simple;
    }(TextCoverage_1.default));
    exports.default = Simple;
});
//# sourceMappingURL=Simple.js.map