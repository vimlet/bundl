{"version":3,"file":"BenchmarkSuite.js","sourceRoot":"","sources":["../../../src/lib/BenchmarkSuite.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,iCAIiB;IAOjB;QAA4C,0CAAK;QAU/C,wBAAY,OAA8B;mBACxC,kBAAoB,OAAO,CAAC;QAC9B,CAAC;QACH,qBAAC;IAAD,CAAC,AAbD,CAA4C,eAAK,GAahD","sourcesContent":["import Suite, {\n  SuiteOptions,\n  SuiteProperties,\n  TestLifecycleFunction\n} from './Suite';\nimport BenchmarkTest from './BenchmarkTest';\n\n/**\n * BenchmarkSuite is a specialization of [[lib/Suite]] that manages\n * [[lib/BenchmarkTest|BenchmarkTests]].\n */\nexport default class BenchmarkSuite extends Suite\n  implements BenchmarkSuiteProperties {\n  /** A function that is run after each test call by benchmark.js */\n  afterEachLoop: TestLifecycleFunction | undefined;\n\n  /** A function that is run before each test call by benchmark.js */\n  beforeEachLoop: TestLifecycleFunction | undefined;\n\n  tests!: (BenchmarkSuite | BenchmarkTest)[];\n\n  constructor(options: BenchmarkSuiteOptions) {\n    super(<SuiteOptions>options);\n  }\n}\n\nexport interface BenchmarkSuiteProperties extends SuiteProperties {\n  beforeEachLoop: TestLifecycleFunction | undefined;\n  afterEachLoop: TestLifecycleFunction | undefined;\n}\n\nexport type BenchmarkSuiteOptions = Partial<BenchmarkSuiteProperties> & {\n  name: string;\n  parent: Suite;\n  tests?: (BenchmarkSuite | BenchmarkTest)[];\n};\n"]}