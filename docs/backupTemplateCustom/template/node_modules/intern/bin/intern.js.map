{"version":3,"file":"intern.js","sourceRoot":"","sources":["../../../src/bin/intern.ts"],"names":[],"mappings":";;;;;;;;;;;;IAMA,+CAAyC;IACzC,4CAA2C;IAE3C,yCAA6C;IAC7C,2CAA0D;IAC1D,kCAA8B;IAC9B,+CAAiD;IAEjD,gBAAS,EAAE;SACR,IAAI,CAAC,UAAC,EAAgB;YAAd,kBAAM,EAAE,cAAI;QACnB,IAAI,MAAM,CAAC,IAAI,EAAE;YACf,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SACzB;aAAM,IAAI,MAAM,CAAC,WAAW,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,2BAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;aAC3C;YAED,eAAM,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC1C,eAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACzB,OAAO,eAAM,CAAC,GAAG,EAAE,CAAC;SACrB;IACH,CAAC,CAAC;SACD,KAAK,CAAC,UAAA,KAAK;QAGV,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACnB,IAAI;gBACF,OAAO,CAAC,KAAK,CAAC,eAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtB;SACF;QACD,eAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEL,SAAS,SAAS,CAAC,MAAW,EAAE,IAAa;QAC3C,IAAM,CAAC,GAAG,UAAC,GAAW,IAAK,OAAA,wBAAQ,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,EAA1C,CAA0C,CAAC;QACtE,IAAM,GAAG,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACvC,IAAM,UAAU,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAM,WAAW,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,oBAAkB,GAAG,CAAC,OAAS,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,iBAAe,UAAY,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,kBAAgB,WAAa,CAAC,CAAC;QAC3C,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CACT,kEAAkE,CACnE,CAAC;QACF,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,EAAE,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;QAEhE,IAAM,YAAY,GAAS,eAAO,CAAC,OAAO,CAAC;QAC3C,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;aACnC,GAAG,CAAC,UAAA,GAAG;YACN,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;QACjE,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACT,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gBACnB,OAAO,CAAC,CAAC,CAAC;aACX;YACD,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gBACnB,OAAO,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACL,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAA9B,CAA8B,EAAE,CAAC,CAAC,CAAC;QAE3E,KAA8B,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAAzB,IAAA,eAAe,EAAb,gBAAI,EAAE,gBAAK;YACtB,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,MAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,OAAK,MAAI,GAAG,GAAG,WAAM,KAAO,CAAC,CAAC;SAC3C;QAED,IAAI,IAAI,EAAE;YACR,OAAO,CAAC,GAAG,EAAE,CAAC;YACd,IAAM,WAAW,GAAG,2BAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACvD,IAAI,WAAW,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,wBAAsB,IAAI,SAAM,CAAC,CAAC;gBAC9C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aAC1B;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,wBAAsB,IAAI,MAAG,CAAC,CAAC;aAC5C;SACF;IACH,CAAC","sourcesContent":["#!/usr/bin/env node\n\n//\n// This is the runner script used to start Intern in a Node environment.\n//\n\nimport { execSync } from 'child_process';\nimport { global } from '@theintern/common';\n\nimport { getConfig } from '../lib/node/util';\nimport { getConfigDescription } from '../lib/common/util';\nimport intern from '../index';\nimport * as console from '../lib/common/console';\n\ngetConfig()\n  .then(({ config, file }) => {\n    if (config.help) {\n      printHelp(config, file);\n    } else if (config.showConfigs) {\n      console.log(getConfigDescription(config));\n    } else {\n      if (!file) {\n        console.warn('No config file was loaded');\n      }\n\n      intern.configure({ reporters: 'runner' });\n      intern.configure(config);\n      return intern.run();\n    }\n  })\n  .catch(error => {\n    // If intern wasn't initialized, then this error won't have been\n    // reported\n    if (!error.reported) {\n      try {\n        console.error(intern.formatError(error));\n      } catch (e) {\n        console.error(error);\n      }\n    }\n    global.process.exitCode = 1;\n  });\n\nfunction printHelp(config: any, file?: string) {\n  const $ = (cmd: string) => execSync(cmd, { encoding: 'utf8' }).trim();\n  const pkg = require('../package.json');\n  const npmVersion = $('npm -v');\n  const nodeVersion = $('node -v');\n  console.log(`intern version ${pkg.version}`);\n  console.log(`npm version ${npmVersion}`);\n  console.log(`node version ${nodeVersion}`);\n  console.log();\n  console.log(\n    'Usage: intern [config=<file>] [showConfig|showConfigs] [options]'\n  );\n  console.log();\n  console.log('  config      - path to a config file');\n  console.log('  showConfig  - show the resolved config');\n  console.log('  showConfigs - show information about configFile');\n  console.log();\n  console.log(\"Options (set with 'option=value' or 'option'):\\n\");\n\n  const internConfig = (<any>intern)._config;\n  const opts = Object.keys(internConfig)\n    .map(key => {\n      return { name: key, value: JSON.stringify(internConfig[key]) };\n    })\n    .sort((a, b) => {\n      if (a.name < b.name) {\n        return -1;\n      }\n      if (a.name > b.name) {\n        return 1;\n      }\n      return 0;\n    });\n  const width = opts.reduce((max, opt) => Math.max(opt.name.length, max), 0);\n\n  for (const { name, value } of opts) {\n    const pad = Array(width - name.length + 1).join(' ');\n    console.log(`  ${name}${pad} - ${value}`);\n  }\n\n  if (file) {\n    console.log();\n    const description = getConfigDescription(config, '  ');\n    if (description) {\n      console.log(`Using config file '${file}':\\n`);\n      console.log(description);\n    } else {\n      console.log(`Using config file '${file}'`);\n    }\n  }\n}\n"]}