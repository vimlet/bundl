(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@theintern/common", "./object", "../BenchmarkTest", "../BenchmarkSuite"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var common_1 = require("@theintern/common");
    var object_1 = require("./object");
    var BenchmarkTest_1 = require("../BenchmarkTest");
    var BenchmarkSuite_1 = require("../BenchmarkSuite");
    function registerSuite(name, descriptorOrFactory) {
        return _registerSuite(common_1.global.intern, name, descriptorOrFactory);
    }
    exports.default = registerSuite;
    function getInterface(executor) {
        return {
            registerSuite: function (name, descriptorOrFactory) {
                return _registerSuite(executor, name, descriptorOrFactory);
            },
            async: BenchmarkTest_1.default.async
        };
    }
    exports.getInterface = getInterface;
    function _registerSuite(executor, name, descriptorOrFactory) {
        if (!executor.config.benchmark) {
            executor.log('Not registering benchmark suite ' +
                name +
                ' because benchmarking is disabled');
            return;
        }
        executor.addSuite(function (parent) {
            var descriptor;
            if (object_1.isSuiteDescriptorFactory(descriptorOrFactory)) {
                descriptor = descriptorOrFactory();
            }
            else {
                descriptor = descriptorOrFactory;
            }
            parent.add(object_1.createSuite(name, parent, descriptor, BenchmarkSuite_1.default, BenchmarkTest_1.default));
        });
    }
});
//# sourceMappingURL=benchmark.js.map