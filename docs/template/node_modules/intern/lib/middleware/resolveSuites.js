(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "url", "../node/util"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var url_1 = require("url");
    var util_1 = require("../node/util");
    function resolveSuites(context) {
        return function (request, response) {
            var query = url_1.parse(request.url, true).query;
            var suites = Array.isArray(query.suites)
                ? query.suites
                : [query.suites];
            var resolvedSuites = JSON.stringify(util_1.expandFiles(suites));
            context.executor.log('resolveSuites middlware expanded', suites, 'to', resolvedSuites);
            response.writeHead(200, {
                'Content-Type': 'application/json',
                'Content-Length': resolvedSuites.length
            });
            response.end(resolvedSuites);
        };
    }
    exports.default = resolveSuites;
});
//# sourceMappingURL=resolveSuites.js.map