{"version":3,"file":"Reporter.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Reporter.ts"],"names":[],"mappings":"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","sourcesContent":["import { global } from '@theintern/common';\n\nimport { Events, Executor, NoDataEvents, Handle } from '../executors/Executor';\nimport { ErrorFormatOptions } from '../common/ErrorFormatter';\n\n/**\n * This is a base class for reporters that provides convenienience features such\n * as event handler registration and a default console.\n */\nexport default class Reporter implements ReporterProperties {\n  readonly executor: Executor;\n\n  protected _console: Console | undefined;\n  protected _executor: Executor | undefined;\n  protected _handles: Handle[] | undefined;\n  protected _output: ReporterOutput | undefined;\n\n  /**\n   * A mapping from event names to the names of methods on this object. This\n   * property should be defined on the class prototype. It is automatically\n   * created by the @eventHandler decorator.\n   */\n  protected _eventHandlers: { [eventName: string]: string } | undefined;\n\n  constructor(executor: Executor, options: ReporterOptions = {}) {\n    if (options.output) {\n      this.output = options.output;\n    }\n    if (options.console) {\n      this.console = options.console;\n    }\n    this.executor = executor;\n    this._registerEventHandlers();\n  }\n\n  get console() {\n    if (!this._console) {\n      this._console = getConsole();\n    }\n    return this._console;\n  }\n\n  set console(value: Console) {\n    this._console = value;\n  }\n\n  get output() {\n    if (!this._output) {\n      // Use process.stdout in a Node.js environment, otherwise construct\n      // a writable-like object that outputs to the console.\n      if (global.process != null) {\n        return global.process.stdout;\n      } else {\n        const _console = this.console;\n        this._output = {\n          write(chunk: string, _encoding: string, callback: Function) {\n            _console.log(chunk);\n            callback();\n          },\n          end(chunk: string, _encoding: string, callback: Function) {\n            _console.log(chunk);\n            callback();\n          }\n        };\n      }\n    }\n    return this._output;\n  }\n\n  set output(value: ReporterOutput) {\n    this._output = value;\n  }\n\n  formatError(error: Error, options?: ErrorFormatOptions) {\n    return this.executor.formatError(error, options);\n  }\n\n  /**\n   * Register any handlers added to the class event handlers map\n   */\n  protected _registerEventHandlers() {\n    if (!this._eventHandlers) {\n      return;\n    }\n\n    // Use a for..in loop because _eventHandlers may inherit from a parent\n    for (let name in this._eventHandlers) {\n      this.executor.on(<keyof Events>name, (...args: any[]) => {\n        const handler = this._eventHandlers![name];\n        return (<any>this)[handler](...args);\n      });\n    }\n  }\n}\n\n/**\n * Create a decorator that will add a decorated method to a class's list of\n * event handlers.\n */\nexport function createEventHandler<\n  E extends Events,\n  N extends NoDataEvents = NoDataEvents\n>() {\n  return function() {\n    function decorate(\n      target: any,\n      propertyKey: N,\n      _descriptor: TypedPropertyDescriptor<() => void | Promise<any>>\n    ): void;\n    function decorate<T extends keyof E>(\n      target: any,\n      propertyKey: T,\n      _descriptor: TypedPropertyDescriptor<(data: E[T]) => void | Promise<any>>\n    ): void;\n    function decorate<T extends keyof E>(\n      target: any,\n      propertyKey: T,\n      _descriptor:\n        | TypedPropertyDescriptor<(data: E[T]) => void | Promise<any>>\n        | TypedPropertyDescriptor<() => void | Promise<any>>\n    ) {\n      if (!target.hasOwnProperty('_eventHandlers')) {\n        if (target._eventHandlers != null) {\n          // If there's an _eventHandlers property on a parent,\n          // inherit from it\n          target._eventHandlers = Object.create(target._eventHandlers);\n        } else {\n          target._eventHandlers = {};\n        }\n      }\n      target._eventHandlers[propertyKey] = propertyKey;\n    }\n    return decorate;\n  };\n}\n\n/**\n * The default event handler decorator.\n */\nexport const eventHandler = createEventHandler();\n\nexport interface ReporterProperties {\n  output: ReporterOutput;\n  console: Console;\n}\n\nexport type ReporterOptions = Partial<ReporterProperties>;\n\n/**\n * A stream that reporters can write to\n */\nexport interface ReporterOutput {\n  write(chunk: string | Buffer, encoding?: string, callback?: Function): void;\n  end(chunk: string | Buffer, encoding?: string, callback?: Function): void;\n}\n\nfunction getConsole() {\n  if (typeof console !== 'undefined') {\n    return console;\n  }\n\n  return <Console>{\n    assert: noop,\n    count: noop,\n    dir: noop,\n    error: noop,\n    exception: noop,\n    info: noop,\n    log: noop,\n    table: noop,\n    time: noop,\n    timeEnd: noop,\n    trace: noop,\n    warn: noop\n  };\n}\n\nfunction noop() {\n  // do nothing\n}\n"]}