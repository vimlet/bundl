{"version":3,"file":"Coverage.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Coverage.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,+DAI+B;IAC/B,2DAA6E;IAC7E,qDAAsD;IACtD,uCAA8E;IAK9E,IAAM,YAAY,GAAG,6BAAkB,EAAc,CAAC;IAEtD;QAA+C,oCAAQ;QASrD,kBAAY,QAAc,EAAE,OAA6B;YAA7B,wBAAA,EAAA,YAA6B;YAAzD,YACE,kBAAM,QAAQ,EAAE,OAAO,CAAC,SAWzB;YATC,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACpB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;aAClC;YACD,IAAI,OAAO,CAAC,SAAS,EAAE;gBACrB,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;aACpC;YACD,IAAI,OAAO,CAAC,UAAU,EAAE;gBACtB,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;aACtC;;QACH,CAAC;QAED,qCAAkB,GAAlB;YACE,OAAO;gBACL,IAAI,EAAE,IAAI,CAAC,QAAQ;aACpB,CAAC;QACJ,CAAC;QAED,uCAAoB,GAApB,UAAqB,IAAgB,EAAE,IAAmC;YACxE,IAAI,GAAgB,CAAC;YAErB,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;gBACvB,GAAG,GAAG,IAAI,CAAC;aACZ;iBAAM;gBACL,GAAG,GAAG,yCAAiB,CAAC,IAAI,CAAC,CAAC;aAC/B;YAED,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAExE,IAAM,OAAO,GAAG,mCAAa,CAAC;gBAC5B,GAAG,EAAE,IAAI,CAAC,SAAS;gBACnB,YAAY,EAAE,WAAW,CAAC,YAAY;gBACtC,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,CAAC,CAAC;YACH,IAAM,IAAI,GAAG,iCAAW,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAM,MAAM,GAAG,yBAAM,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC9B,CAAC;QAGD,yBAAM,GAAN;YACE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACtC,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;aACjD;QACH,CAAC;QALD;YADC,YAAY,EAAE;8CAMd;QACH,eAAC;KAAA,AAzDD,CAA+C,kBAAQ,GAyDtD;sBAzD6B,QAAQ;IAwEtC,SAAS,aAAa,CAAC,KAAU;QAC/B,OAAO,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC;IAC5D,CAAC","sourcesContent":["import {\n  CoverageMap,\n  CoverageMapData,\n  createCoverageMap\n} from 'istanbul-lib-coverage';\nimport { createContext, summarizers, Watermarks } from 'istanbul-lib-report';\nimport { create, ReportType } from 'istanbul-reports';\nimport Reporter, { createEventHandler, ReporterProperties } from './Reporter';\nimport Node, { NodeEvents } from '../executors/Node';\n\nexport { ReportType };\n\nconst eventHandler = createEventHandler<NodeEvents>();\n\nexport default abstract class Coverage extends Reporter\n  implements CoverageProperties {\n  abstract readonly reportType: ReportType;\n  readonly executor!: Node;\n\n  filename?: string;\n  directory?: string;\n  watermarks?: Watermarks;\n\n  constructor(executor: Node, options: CoverageOptions = {}) {\n    super(executor, options);\n\n    if (options.filename) {\n      this.filename = options.filename;\n    }\n    if (options.directory) {\n      this.directory = options.directory;\n    }\n    if (options.watermarks) {\n      this.watermarks = options.watermarks;\n    }\n  }\n\n  getReporterOptions(): { [key: string]: any } {\n    return {\n      file: this.filename\n    };\n  }\n\n  createCoverageReport(type: ReportType, data: CoverageMapData | CoverageMap) {\n    let map: CoverageMap;\n\n    if (isCoverageMap(data)) {\n      map = data;\n    } else {\n      map = createCoverageMap(data);\n    }\n\n    const transformed = this.executor.sourceMapStore.transformCoverage(map);\n\n    const context = createContext({\n      dir: this.directory,\n      sourceFinder: transformed.sourceFinder,\n      watermarks: this.watermarks\n    });\n    const tree = summarizers.pkg(transformed.map);\n    const report = create(type, this.getReporterOptions());\n    tree.visit(report, context);\n  }\n\n  @eventHandler()\n  runEnd(): void {\n    const map = this.executor.coverageMap;\n    if (map.files().length > 0) {\n      this.createCoverageReport(this.reportType, map);\n    }\n  }\n}\n\nexport interface CoverageProperties extends ReporterProperties {\n  /** A filename to write coverage data to */\n  filename?: string;\n\n  /** A direcotry to write coverage data to */\n  directory?: string;\n\n  /** Watermarks used to check coverage */\n  watermarks?: Watermarks;\n}\n\nexport type CoverageOptions = Partial<CoverageProperties>;\n\nfunction isCoverageMap(value: any): value is CoverageMap {\n  return value != null && typeof value.files === 'function';\n}\n"]}