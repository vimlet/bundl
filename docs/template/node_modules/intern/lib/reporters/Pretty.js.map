{"version":3,"file":"Pretty.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Pretty.ts"],"names":[],"mappings":"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","sourcesContent":["import * as charm from 'charm';\nimport { createCoverageMap, CoverageMap } from 'istanbul-lib-coverage';\nimport { format } from 'util';\nimport { global } from '@theintern/common';\n\nimport Environment from '../Environment';\nimport Suite from '../Suite';\nimport Test from '../Test';\nimport RemoteSuite from '../RemoteSuite';\nimport { createEventHandler } from './Reporter';\nimport TextCoverage, { TextCoverageProperties } from './TextCoverage';\nimport { CoverageMessage, DeprecationMessage } from '../executors/Executor';\nimport Node, { NodeEvents, TunnelMessage } from '../executors/Node';\n\nconst eventHandler = createEventHandler<NodeEvents>();\n\n/**\n * Handles presentation of runner results to the user\n */\nexport default class Pretty extends TextCoverage implements PrettyProperties {\n  colorReplacement: { [key: string]: string };\n  dimensions: any;\n  titleWidth: number;\n  maxProgressBarWidth: number;\n  tunnelState: string;\n\n  protected _header: string;\n  protected _log: string[];\n  protected _reports: any;\n  protected _spinnerOffset: number;\n  protected _total: Report;\n  protected _charm: charm.CharmInstance | undefined;\n  protected _renderTimeout: NodeJS.Timer | undefined;\n\n  constructor(executor: Node, options: PrettyOptions = {}) {\n    super(executor, options);\n\n    this._spinnerOffset = 0;\n    this.dimensions = options.dimensions || {};\n    this.titleWidth = options.titleWidth || 12;\n    this.maxProgressBarWidth = options.maxProgressBarWidth || 40;\n    this.colorReplacement = Object.assign(\n      {\n        0: 'green',\n        1: 'magenta',\n        2: 'red',\n        '✓': 'green',\n        '!': 'red',\n        '×': 'red',\n        '~': 'magenta',\n        '⚠': 'yelow'\n      },\n      options.colorReplacement || {}\n    );\n    this._header = '';\n    this._reports = {};\n    this._log = [];\n    this.tunnelState = '';\n    this._total = new Report();\n  }\n\n  close() {\n    if (this._renderTimeout) {\n      clearTimeout(this._renderTimeout);\n    }\n  }\n\n  @eventHandler()\n  runStart() {\n    this._header = this.executor.config.name;\n    this._charm = this._charm || this._newCharm();\n\n    const resize = () => {\n      this.dimensions.width = (<any>global.process.stdout).columns || 80;\n      this.dimensions.height = (<any>global.process.stdout).rows || 24;\n    };\n\n    resize();\n    global.process.stdout.on('resize', resize);\n\n    const rerender = () => {\n      this._charm!.erase('screen').position(0, 0);\n      this._render();\n      this._renderTimeout = global.setTimeout(rerender, 200);\n    };\n    rerender();\n  }\n\n  @eventHandler()\n  runEnd() {\n    const charm = this._charm!;\n    global.clearTimeout(this._renderTimeout);\n    charm.erase('screen').position(0, 0);\n\n    // write a full log of errors\n    // Sort logs: pass < deprecated < skip < errors < fail\n    const ERROR_LOG_WEIGHT: { [key: string]: number } = {\n      '✓': 0,\n      '⚠': 1,\n      '~': 2,\n      '×': 3,\n      '!': 4\n    };\n    this._log\n      .sort((a: any, b: any) => {\n        a = ERROR_LOG_WEIGHT[a.charAt(0)] || 0;\n        b = ERROR_LOG_WEIGHT[b.charAt(0)] || 0;\n        return a - b;\n      })\n      .forEach(line => {\n        const color = this._getColor(line);\n        if (color == null) {\n          charm.display('reset');\n        } else {\n          charm.foreground(color);\n        }\n        charm.write(`${line}\\n`);\n      });\n    charm.display('reset');\n    charm.write('\\n');\n\n    // Display the pretty results\n    this._render(true);\n\n    // Display coverage information\n    if (this._total.coverageMap.files().length > 0) {\n      charm.write('\\n');\n      this.createCoverageReport('text', this._total.coverageMap);\n    }\n  }\n\n  @eventHandler()\n  coverage(data: CoverageMessage) {\n    const report = this._reports[data.sessionId || ''];\n    report && report.coverageMap.merge(data.coverage);\n    this._total.coverageMap.merge(data.coverage);\n  }\n\n  @eventHandler()\n  suiteStart(suite: Suite) {\n    if (!suite.hasParent || suite instanceof RemoteSuite) {\n      const numTests = suite.numTests;\n      this._total.numTotal += numTests;\n\n      if (suite.sessionId) {\n        const report = this._getReport(suite);\n        report.numTotal += numTests;\n        report.suiteInfo[suite.id] = {\n          parentId: suite.parentId,\n          numToReport: suite.numTests\n        };\n      }\n    }\n  }\n\n  @eventHandler()\n  suiteEnd(suite: Suite) {\n    if (suite.error) {\n      // Record all the tests that haven't been run as skipped\n      const info = this._getReport(suite).suiteInfo[suite.id];\n      this._record(suite, Result.SKIP, info.numToReport);\n\n      const message = '! ' + suite.id;\n      this._log.push(message + '\\n' + this.formatError(suite.error));\n    }\n  }\n\n  @eventHandler()\n  testEnd(test: Test) {\n    if (test.skipped) {\n      this._record(test, Result.SKIP);\n      this._log.push('~ ' + test.id + ': ' + (test.skipped || 'skipped'));\n    } else if (test.error) {\n      const message = '× ' + test.id;\n      this._record(test, Result.FAIL);\n      this._log.push(message + '\\n' + this.formatError(test.error));\n    } else {\n      this._record(test, Result.PASS);\n      this._log.push('✓ ' + test.id);\n    }\n  }\n\n  @eventHandler()\n  tunnelDownloadProgress(message: TunnelMessage) {\n    const progress = message.progress!;\n    this.tunnelState =\n      'Downloading ' +\n      ((progress.received / progress.total) * 100).toFixed(2) +\n      '%';\n  }\n\n  @eventHandler()\n  tunnelStatus(message: TunnelMessage) {\n    this.tunnelState = message.status!;\n  }\n\n  @eventHandler()\n  error(error: Error) {\n    const message = '! ' + error.message;\n    this._log.push(message + '\\n' + this.formatError(error));\n    // stop the render timeout on a fatal error so Intern can exit\n    global.clearTimeout(this._renderTimeout);\n  }\n\n  @eventHandler()\n  deprecated(message: DeprecationMessage) {\n    let text = '⚠ ' + message.original + ' is deprecated.';\n\n    if (message.replacement) {\n      text += ' Use ' + message.replacement + ' instead.';\n    }\n\n    if (message.message) {\n      text += ' ' + message.message;\n    }\n\n    this._log.push(text);\n  }\n\n  /**\n   * Return the report for a given session, creating it if necessary.\n   */\n  private _getReport(suiteOrTest: Suite | Test): Report {\n    const id = suiteOrTest.sessionId || '';\n    if (!this._reports[id]) {\n      this._reports[id] = new Report(\n        suiteOrTest.remote && suiteOrTest.remote.environmentType\n      );\n    }\n    return this._reports[id];\n  }\n\n  /**\n   * Create the charm instance used by this report.\n   */\n  private _newCharm() {\n    const c = charm();\n    c.pipe(global.process.stdout);\n    return c;\n  }\n\n  private _record(suiteOrTest: Suite | Test, result: Result, count = 1) {\n    const report = this._reports[suiteOrTest.sessionId];\n    this._total.record(result, count);\n    if (report) {\n      report.record(result, count);\n\n      const suiteInfo = report.suiteInfo;\n      let info: SuiteInfo | undefined = suiteInfo[suiteOrTest.id];\n      // A test ID won't be in this._suiteInfo, but it's parentId should be\n      if (!info && suiteOrTest.parentId) {\n        info = suiteInfo[suiteOrTest.parentId];\n      }\n      while (info) {\n        info.numToReport -= count;\n        if (info.parentId) {\n          info = suiteInfo[info.parentId];\n        } else {\n          info = undefined;\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the progress bar\n   * [✔︎~✔︎×✔︎✔︎✔︎✔︎✔︎✔︎] 99/100\n   * @param report the report data to render\n   * @param width the maximum width for the entire progress bar\n   */\n  private _drawProgressBar(report: Report, width: number) {\n    const spinnerCharacter = SPINNER_STATES[this._spinnerOffset];\n    const charm = this._charm!;\n    if (!report.numTotal) {\n      charm.write('Pending');\n      return;\n    }\n\n    const totalTextSize = String(report.numTotal).length;\n    const remainingWidth = Math.max(width - 4 - totalTextSize * 2, 1);\n    const barSize = Math.min(\n      remainingWidth,\n      report.numTotal,\n      this.maxProgressBarWidth\n    );\n    const results = report.getCompressedResults(barSize);\n\n    charm.write('[');\n    results.forEach(value => {\n      const color = this._getColor(value);\n      if (color == null) {\n        charm.display('reset');\n      } else {\n        charm.foreground(color);\n      }\n      charm.write(symbols[value]);\n    });\n    charm.display('reset');\n    charm.write(\n      fit(spinnerCharacter, barSize - results.length) +\n        '] ' +\n        fit(report.finished, totalTextSize, true) +\n        '/' +\n        report.numTotal\n    );\n  }\n\n  /**\n   * Render a single line\n   * TITLE:        [✔︎~✔︎×✔︎✔︎✔︎✔︎✔︎✔︎] 100/100, 2 fail, 1 skip\n   * TODO split this into two lines. The first line will display the\n   * title, OS and code coverage and the progress bar on the second\n   */\n  private _drawSessionReport(report: Report) {\n    const charm = this._charm!;\n    const titleWidth = this.titleWidth;\n    const leftOfBar = fit(\n      this._abbreviateEnvironment(report.environment).slice(0, titleWidth - 2) +\n        ': ',\n      titleWidth\n    );\n    const rightOfBar =\n      '' +\n      (report.numFailed ? ', ' + report.numFailed + ' fail' : '') +\n      (report.numSkipped ? ', ' + report.numSkipped + ' skip' : '');\n    const barWidth = this.dimensions.width - rightOfBar.length - titleWidth;\n\n    charm.write(leftOfBar);\n    this._drawProgressBar(report, barWidth);\n    charm.write(rightOfBar + '\\n');\n  }\n\n  /**\n   * Abbreviate the environment information for rendering\n   * @param env the test environment\n   * @returns {string} abbreviated environment information\n   */\n  private _abbreviateEnvironment(env: any): string {\n    const browser =\n      (<{ [key: string]: any }>BROWSERS)[env.browserName.toLowerCase()] ||\n      env.browserName.slice(0, 4);\n    const result = [browser];\n\n    if (env.version) {\n      let version = String(env.version);\n      if (version.indexOf('.') > -1) {\n        version = version.slice(0, version.indexOf('.'));\n      }\n      result.push(version);\n    }\n\n    if (env.platform) {\n      result.push(env.platform.slice(0, 3));\n    }\n\n    return result.join(' ');\n  }\n\n  private _render(omitLogs: boolean = false) {\n    const charm = this._charm!;\n    const numReports = Object.keys(this._reports).length;\n    const logLength =\n      this.dimensions.height -\n      numReports -\n      4 /* last line & total */ -\n      (this.tunnelState ? 2 : 0) -\n      (numReports ? 1 : 0) -\n      (this._header ? 1 : 0);\n    this._spinnerOffset = ++this._spinnerOffset % SPINNER_STATES.length;\n\n    charm.display('reset');\n    if (this._header) {\n      charm.display('bright');\n      charm.write(this._header + '\\n');\n      charm.display('reset');\n    }\n    this.tunnelState && charm.write('Tunnel: ' + this.tunnelState + '\\n\\n');\n    this._drawTotalReport(this._total);\n\n    // TODO if there is not room to render all reports only render\n    // active ones or only the total with less space\n    if (numReports) {\n      charm.write('\\n');\n      for (let key in this._reports) {\n        this._drawSessionReport(this._reports[key]);\n      }\n    }\n\n    if (!omitLogs && logLength > 0 && this._log.length) {\n      const allowed = { '×': true, '⚠': true, '!': true };\n      charm.write('\\n');\n\n      this._log\n        .filter(line => {\n          return (<{ [key: string]: any }>allowed)[line.charAt(0)];\n        })\n        .slice(-logLength)\n        .forEach(line => {\n          // truncate long lines\n          const color = this._getColor(line);\n          if (color) {\n            charm.foreground(color);\n          }\n          line = line.split('\\n', 1)[0];\n          charm.write(`${line.slice(0, this.dimensions.width)}\\n`);\n          charm.display('reset');\n        });\n    }\n  }\n\n  private _drawTotalReport(report: Report) {\n    const charm = this._charm!;\n    const title = 'Total: ';\n    const totalTextSize = String(report.numTotal).length;\n\n    charm.write(title);\n    this._drawProgressBar(report, this.dimensions.width - title.length);\n    charm.write(\n      format(\n        '\\nPassed: %s  Failed: %s  Skipped: %d\\n',\n        fit(report.numPassed, totalTextSize),\n        fit(report.numFailed, totalTextSize),\n        report.numSkipped\n      )\n    );\n  }\n\n  private _getColor(value: string | number): charm.CharmColor | null {\n    if (typeof value === 'string') {\n      value = value[0];\n    }\n    return <charm.CharmColor>this.colorReplacement[value] || null;\n  }\n}\n\nexport interface PrettyProperties extends TextCoverageProperties {\n  colorReplacement: { [key: string]: string };\n  dimensions: any;\n  maxProgressBarWidth: number;\n  titleWidth: number;\n}\n\nexport type PrettyOptions = Partial<PrettyProperties>;\n\n/**\n * Model tracking test results\n * @param environment the environment associated with the report\n * @param sessionId the sessionId associated with the report\n */\nexport class Report {\n  environment: Environment | undefined;\n  sessionId: string | undefined;\n  numTotal = 0;\n  numPassed = 0;\n  numFailed = 0;\n  numSkipped = 0;\n  results: number[] = [];\n  suiteInfo: { [id: string]: SuiteInfo };\n  coverageMap: CoverageMap;\n\n  constructor(environment?: Environment, sessionId?: string) {\n    this.environment = environment;\n    this.sessionId = sessionId;\n    this.coverageMap = createCoverageMap();\n    this.suiteInfo = {};\n  }\n\n  get finished() {\n    return this.results.length;\n  }\n\n  record(result: Result, count = 1) {\n    for (let i = 0; i < count; i++) {\n      this.results.push(result);\n    }\n\n    switch (result) {\n      case Result.PASS:\n        this.numPassed += count;\n        break;\n      case Result.SKIP:\n        this.numSkipped += count;\n        break;\n      case Result.FAIL:\n        this.numFailed += count;\n        break;\n    }\n  }\n\n  getCompressedResults(maxWidth: number): number[] {\n    const total = Math.max(this.numTotal, this.results.length);\n    const width = Math.min(maxWidth, total);\n    const resultList: Result[] = [];\n\n    for (let i = 0; i < this.results.length; ++i) {\n      const pos = Math.floor((i / total) * width);\n      resultList[pos] = Math.max(\n        resultList[pos] || Result.PASS,\n        this.results[i]\n      );\n    }\n\n    return resultList;\n  }\n}\n\nexport enum Result {\n  PASS = 0,\n  SKIP = 1,\n  FAIL = 2\n}\n\nexport interface SuiteInfo {\n  parentId: string | undefined;\n  numToReport: number;\n}\n\nconst symbols = ['✓', '~', '×'];\nconst PAD = new Array(100).join(' ');\nconst SPINNER_STATES = ['/', '-', '\\\\', '|'];\nconst BROWSERS = {\n  chrome: 'Chr',\n  firefox: 'Fx',\n  opera: 'O',\n  safari: 'Saf',\n  'internet explorer': 'IE',\n  phantomjs: 'Phan'\n};\n\nfunction pad(width: number): string {\n  return PAD.slice(0, Math.max(width, 0));\n}\n\nfunction fit(\n  text: string | number,\n  width: number,\n  padLeft: boolean = false\n): string {\n  text = String(text);\n  if (text.length < width) {\n    if (padLeft) {\n      return pad(width - text.length) + text;\n    }\n    return text + pad(width - text.length);\n  }\n  return text.slice(0, width);\n}\n"]}