{"version":3,"file":"NullTunnel.js","sourceRoot":"","sources":["../../src/NullTunnel.ts"],"names":[],"mappings":";;;AAAA,4CAA6D;AAC7D,mCAAoD;AAKpD;IAAwC,sCAAM;IAC5C,oBAAY,OAAmC;eAC7C,kBACE,MAAM,CAAC,MAAM,CACX;YACE,IAAI,EAAE,EAAE;SACT,EACD,OAAO,IAAI,EAAE,CACd,CACF;IACH,CAAC;IAED,sBAAI,oCAAY;aAAhB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAED,6BAAQ,GAAR;QACE,OAAO,aAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,0BAAK,GAAL;QACE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,OAAO,aAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,yBAAI,GAAJ;QACE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,iCAAY,GAAZ;QACE,OAAO,aAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IACH,iBAAC;AAAD,CAAC,AAjCD,CAAwC,gBAAM,GAiC7C","sourcesContent":["import { Task, CancellablePromise } from '@theintern/common';\nimport Tunnel, { TunnelProperties } from './Tunnel';\n\n/**\n * A no-op tunnel.\n */\nexport default class NullTunnel extends Tunnel {\n  constructor(options?: Partial<TunnelProperties>) {\n    super(\n      Object.assign(\n        {\n          auth: ''\n        },\n        options || {}\n      )\n    );\n  }\n\n  get isDownloaded() {\n    return true;\n  }\n\n  download(): CancellablePromise<void> {\n    return Task.resolve();\n  }\n\n  start(): CancellablePromise<void> {\n    this._state = 'running';\n    return Task.resolve();\n  }\n\n  stop() {\n    this._state = 'stopped';\n    return Promise.resolve(0);\n  }\n\n  sendJobState(): CancellablePromise<void> {\n    return Task.resolve();\n  }\n}\n"]}