{"version":3,"file":"Session.js","sourceRoot":"","sources":["../../src/Session.ts"],"names":[],"mappings":"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","sourcesContent":["import Element, { ElementOrElementId } from './Element';\nimport Server from './Server';\nimport findDisplayed from './lib/findDisplayed';\nimport { Task, CancellablePromise, partial } from '@theintern/common';\nimport statusCodes from './lib/statusCodes';\nimport Locator, { toW3cLocator, Strategy } from './lib/Locator';\nimport {\n  forCommand as utilForCommand,\n  manualFindByLinkText,\n  sleep,\n  toExecuteString\n} from './lib/util';\nimport waitForDeleted from './lib/waitForDeleted';\nimport {\n  Capabilities,\n  Geolocation,\n  LogEntry,\n  WebDriverCookie,\n  WebDriverResponse\n} from './interfaces';\n\n/**\n * A Session represents a connection to a remote environment that can be driven\n * programmatically.\n */\nexport default class Session extends Locator<\n  CancellablePromise<Element>,\n  CancellablePromise<Element[]>,\n  CancellablePromise<void>\n> {\n  private _sessionId: string;\n  private _server: Server;\n  private _capabilities: Capabilities;\n  private _closedWindows: any = null;\n  // TODO: Timeouts are held so that we can fiddle with the implicit wait\n  // timeout to add efficient `waitFor` and `waitForDeleted` convenience\n  // methods. Technically only the implicit timeout is necessary.\n  private _timeouts: { [key: string]: CancellablePromise<number> } = {};\n  private _movedToElement = false;\n  private _lastMousePosition: any = null;\n  private _lastAltitude: any = null;\n  private _nextRequest: CancellablePromise<any> | undefined;\n\n  /**\n   * A Session represents a connection to a remote environment that can be\n   * driven programmatically.\n   *\n   * @param sessionId The ID of the session, as provided by the remote.\n   * @param server The server that the session belongs to.\n   * @param capabilities A map of bugs and features that the remote\n   * environment exposes.\n   */\n  constructor(sessionId: string, server: Server, capabilities: Capabilities) {\n    super();\n\n    this._sessionId = sessionId;\n    this._server = server;\n    this._capabilities = capabilities;\n    this._closedWindows = {};\n    this._timeouts = {\n      script: Task.resolve(0),\n      implicit: Task.resolve(0),\n      'page load': Task.resolve(Infinity)\n    };\n  }\n\n  /**\n   * Information about the available features and bugs in the remote\n   * environment.\n   */\n  get capabilities() {\n    return this._capabilities;\n  }\n\n  /**\n   * The current session ID.\n   */\n  get sessionId() {\n    return this._sessionId;\n  }\n\n  /**\n   * The Server that the session runs on.\n   */\n  get server() {\n    return this._server;\n  }\n\n  /**\n   * Delegates the HTTP request for a method to the underlying\n   * [[Server.Server]] object.\n   */\n  private _delegateToServer<T>(\n    method: 'post' | 'get' | 'delete',\n    path: string,\n    requestData: any,\n    pathParts?: string[]\n  ): CancellablePromise<T> {\n    path = 'session/' + this._sessionId + (path ? '/' + path : '');\n\n    if (\n      method === 'post' &&\n      !requestData &&\n      this.capabilities.brokenEmptyPost\n    ) {\n      requestData = {};\n    }\n\n    let cancelled = false;\n    return new Task<T>(resolve => {\n      // The promise is cleared from `_nextRequest` once it has been\n      // resolved in order to avoid infinitely long chains of promises\n      // retaining values that are not used any more\n      let thisRequest: CancellablePromise<any> | undefined;\n      const clearNextRequest = () => {\n        if (this._nextRequest === thisRequest) {\n          this._nextRequest = undefined;\n        }\n      };\n\n      const runRequest = () => {\n        // `runRequest` is normally called once the previous request is\n        // finished. If this request is cancelled before the previous\n        // request is finished, then it should simply never run. (This\n        // Task will have been rejected already by the cancellation.)\n        if (cancelled) {\n          clearNextRequest();\n          return;\n        }\n\n        const response = this._server[method]<WebDriverResponse>(\n          path,\n          requestData,\n          pathParts\n        ).then(response => response.value);\n\n        // safePromise is simply a promise based on the response that\n        // is guaranteed to resolve -- it is only used for promise\n        // chain management\n        const safePromise = response.catch(_error => {});\n        safePromise.then(clearNextRequest);\n\n        // The value of the response always needs to be taken directly\n        // from the server call rather than from the chained\n        // `_nextRequest` promise, since if an undefined value is\n        // returned by the server call and that value is returned\n        // through `finally(runRequest)`, the *previous* Task’s\n        // resolved value will be used as the resolved value, which is\n        // wrong\n        resolve(response);\n\n        return safePromise;\n      };\n\n      // At least ChromeDriver 2.19 will just hard close connections if\n      // parallel requests are made to the server, so any request sent to\n      // the server for a given session must be serialised. Other servers\n      // like Selendroid have been known to have issues with parallel\n      // requests as well, so serialisation is applied universally, even\n      // though it has negative performance implications\n      if (this._nextRequest) {\n        thisRequest = this._nextRequest = this._nextRequest.finally(runRequest);\n      } else {\n        thisRequest = this._nextRequest = runRequest();\n      }\n    }, () => (cancelled = true));\n  }\n\n  serverGet<T>(path: string, requestData?: any, pathParts?: string[]) {\n    return this._delegateToServer<T>('get', path, requestData, pathParts);\n  }\n\n  serverPost<T>(path: string, requestData?: any, pathParts?: string[]) {\n    return this._delegateToServer<T>('post', path, requestData, pathParts);\n  }\n\n  serverDelete<T>(path: string, requestData?: any, pathParts?: string[]) {\n    return this._delegateToServer<T>('delete', path, requestData, pathParts);\n  }\n\n  /**\n   * Gets the current value of a timeout for the session.\n   *\n   * @param type The type of timeout to retrieve. One of 'script',\n   * 'implicit', or 'page load'.\n   * @returns The timeout, in milliseconds.\n   */\n  getTimeout(type: Timeout): CancellablePromise<number> {\n    if (this.capabilities.supportsGetTimeouts) {\n      return this.serverGet<WebDriverTimeouts>('timeouts').then(\n        timeouts => (type === 'page load' ? timeouts.pageLoad : timeouts[type])\n      );\n    } else {\n      return this._timeouts[type];\n    }\n  }\n\n  /**\n   * Sets the value of a timeout for the session.\n   *\n   * @param type The type of timeout to set. One of 'script', 'implicit', or\n   * 'page load'.\n   *\n   * @param ms The length of time to use for the timeout, in milliseconds. A\n   * value of 0 will cause operations to time out immediately.\n   */\n  setTimeout(type: Timeout, ms: number): CancellablePromise<void> {\n    // Infinity cannot be serialised by JSON\n    if (ms === Infinity) {\n      // It seems that at least ChromeDriver 2.10 has a limit here that\n      // is near the 32-bit signed integer limit, and IEDriverServer\n      // 2.42.2 has an even lower limit; 2.33 hours should be infinite\n      // enough for testing\n      ms = Math.pow(2, 23) - 1;\n    }\n\n    // If the target doesn't support a timeout of 0, use 1.\n    if (this.capabilities.brokenZeroTimeout && ms === 0) {\n      ms = 1;\n    }\n\n    // Set both JSONWireProtocol and WebDriver properties in the data object\n    let data = this.capabilities.usesWebDriverTimeouts\n      ? {\n          [type === 'page load' ? 'pageLoad' : type]: ms\n        }\n      : {\n          type,\n          ms\n        };\n\n    const promise = this.serverPost<void>('timeouts', data).catch(error => {\n      // Appium as of April 2014 complains that `timeouts` is\n      // unsupported, so try the more specific endpoints if they exist\n      if (error.name === 'UnknownCommand') {\n        if (type === 'script') {\n          return this.serverPost<void>('timeouts/async_script', {\n            ms: ms\n          });\n        } else if (type === 'implicit') {\n          return this.serverPost<void>('timeouts/implicit_wait', {\n            ms: ms\n          });\n        }\n      } else if (\n        !this.capabilities.usesWebDriverTimeouts &&\n        // At least Chrome 60+\n        (/Missing 'type' parameter/.test(error.message) ||\n          // At least Safari 10+\n          /Unknown timeout type/.test(error.message) ||\n          // IE11\n          /Invalid timeout type specified/.test(error.message))\n      ) {\n        this.capabilities.usesWebDriverTimeouts = true;\n        return this.setTimeout(type, ms);\n      }\n\n      throw error;\n    });\n\n    this._timeouts[type] = promise.then(() => ms).catch(() => 0);\n\n    return promise;\n  }\n\n  /**\n   * Gets the identifier for the window that is currently focused.\n   *\n   * @returns A window handle identifier that can be used with other window\n   * handling functions.\n   */\n  getCurrentWindowHandle(): CancellablePromise<string> {\n    const endpoint = this.capabilities.usesWebDriverWindowHandleCommands\n      ? 'window'\n      : 'window_handle';\n\n    return this.serverGet<string>(endpoint)\n      .then(handle => {\n        if (\n          this.capabilities.brokenDeleteWindow &&\n          this._closedWindows[handle]\n        ) {\n          const error: SessionError = new Error();\n          error.status = '23';\n          error.name = statusCodes[error.status][0];\n          error.message = statusCodes[error.status][1];\n          throw error;\n        }\n\n        return handle;\n      })\n      .catch(error => {\n        if (\n          // At least Edge 44.17763 returns an UnknownError when it doesn't\n          // support /window_handle, whereas most drivers return an\n          // UnknownCommand error.\n          /^Unknown/.test(error.name) &&\n          !this.capabilities.usesWebDriverWindowHandleCommands\n        ) {\n          this.capabilities.usesWebDriverWindowHandleCommands = true;\n          return this.getCurrentWindowHandle();\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * Gets a list of identifiers for all currently open windows.\n   */\n  getAllWindowHandles(): CancellablePromise<string[]> {\n    const endpoint = this.capabilities.usesWebDriverWindowHandleCommands\n      ? 'window/handles'\n      : 'window_handles';\n\n    return this.serverGet<string[]>(endpoint)\n      .then((handles: string[]) => {\n        if (this.capabilities.brokenDeleteWindow) {\n          return handles.filter(handle => {\n            return !this._closedWindows[handle];\n          });\n        }\n\n        return handles;\n      })\n      .catch(error => {\n        if (\n          error.name === 'UnknownCommand' &&\n          !this.capabilities.usesWebDriverWindowHandleCommands\n        ) {\n          this.capabilities.usesWebDriverWindowHandleCommands = true;\n          return this.getAllWindowHandles();\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * Gets the URL that is loaded in the focused window/frame.\n   */\n  getCurrentUrl() {\n    return this.serverGet<string>('url');\n  }\n\n  /**\n   * Navigates the focused window/frame to a new URL.\n   */\n  get(url: string) {\n    this._movedToElement = false;\n\n    if (this.capabilities.brokenMouseEvents) {\n      this._lastMousePosition = { x: 0, y: 0 };\n    }\n\n    return this.serverPost<void>('url', { url: url });\n  }\n\n  /**\n   * Navigates the focused window/frame forward one page using the browser’s\n   * navigation history.\n   */\n  goForward() {\n    // TODO: SPEC: Seems like this and `back` should return the newly\n    // navigated URL.\n    return this.serverPost<void>('forward');\n  }\n\n  /**\n   * Navigates the focused window/frame back one page using the browser’s\n   * navigation history.\n   */\n  goBack() {\n    // TODO: SPEC: Seems like this and `back` should return the newly\n    // navigated URL.\n    return this.serverPost<void>('back');\n  }\n\n  /**\n   * Reloads the current browser window/frame.\n   */\n  refresh() {\n    if (this.capabilities.brokenRefresh) {\n      return this.execute<void>('location.reload();');\n    }\n\n    return this.serverPost<void>('refresh');\n  }\n\n  /**\n   * Executes JavaScript code within the focused window/frame. The code\n   * should return a value synchronously.\n   *\n   * See [[Session.Session.executeAsync]] to execute code that returns values\n   * asynchronously.\n   *\n   * @param script The code to execute. This function will always be\n   * converted to a string, sent to the remote environment, and reassembled\n   * as a new anonymous function on the remote end. This means that you\n   * cannot access any variables through closure. If your code needs to get\n   * data from variables on the local end, they should be passed using\n   * `args`.\n   *\n   * @param args An array of arguments that will be passed to the executed\n   * code. Only values that can be serialised to JSON, plus\n   * [[Element.Element]] objects, can be specified as arguments.\n   *\n   * @returns The value returned by the remote code. Only values that can be\n   * serialised to JSON, plus DOM elements, can be returned.\n   */\n  execute<T>(script: Function | string, args?: any[]): CancellablePromise<T> {\n    // At least FirefoxDriver 2.40.0 will throw a confusing\n    // NullPointerException if args is not an array; provide a friendlier\n    // error message to users that accidentally pass a non-array\n    if (typeof args !== 'undefined' && !Array.isArray(args)) {\n      throw new Error('Arguments passed to execute must be an array');\n    }\n\n    const endpoint = this.capabilities.usesWebDriverExecuteSync\n      ? 'execute/sync'\n      : 'execute';\n\n    let result = this.serverPost<T>(endpoint, {\n      script: toExecuteString(script),\n      args: args || []\n    })\n      .then(value => convertToElements(this, value), fixExecuteError)\n      .catch(error => {\n        if (\n          error.detail.error === 'unknown command' &&\n          !this.capabilities.usesWebDriverExecuteSync\n        ) {\n          this.capabilities.usesWebDriverExecuteSync = true;\n          return this.execute(script, args);\n        }\n        throw error;\n      });\n\n    if (this.capabilities.brokenExecuteUndefinedReturn) {\n      result = result.then(value => (value == null ? null : value));\n    }\n\n    return result;\n  }\n\n  /**\n   * Executes JavaScript code within the focused window/frame. The code must\n   * invoke the provided callback in order to signal that it has completed\n   * execution.\n   *\n   * See [[Session.Session.execute]] to execute code that returns values\n   * synchronously.\n   *\n   * See [[Session.Session.setExecuteAsyncTimeout]] to set the time until an\n   * asynchronous script is considered timed out.\n   *\n   * @param script The code to execute. This function will always be\n   * converted to a string, sent to the remote environment, and reassembled\n   * as a new anonymous function on the remote end. This means that you\n   * cannot access any variables through closure. If your code needs to get\n   * data from variables on the local end, they should be passed using\n   * `args`.\n   *\n   * @param args An array of arguments that will be passed to the executed\n   * code. Only values that can be serialised to JSON, plus\n   * [[Element.Element]] objects, can be specified as arguments. In addition\n   * to these arguments, a callback function will always be passed as the\n   * final argument to the function specified in `script`. This callback\n   * function must be invoked in order to signal that execution has\n   * completed. The return value of the execution, if any, should be passed\n   * to this callback function.\n   *\n   * @returns The value returned by the remote code. Only values that can be\n   * serialised to JSON, plus DOM elements, can be returned.\n   */\n  executeAsync<T>(\n    script: Function | string,\n    args?: any[]\n  ): CancellablePromise<T> {\n    // At least FirefoxDriver 2.40.0 will throw a confusing\n    // NullPointerException if args is not an array; provide a friendlier\n    // error message to users that accidentally pass a non-array\n    if (typeof args !== 'undefined' && !Array.isArray(args)) {\n      throw new Error('Arguments passed to executeAsync must be an array');\n    }\n\n    const endpoint = this.capabilities.usesWebDriverExecuteAsync\n      ? 'execute/async'\n      : 'execute_async';\n\n    return this.serverPost<T>(endpoint, {\n      script: toExecuteString(script),\n      args: args || []\n    })\n      .then(partial(convertToElements, this), fixExecuteError)\n      .catch(error => {\n        if (\n          error.detail.error === 'unknown command' &&\n          !this.capabilities.usesWebDriverExecuteAsync\n        ) {\n          this.capabilities.usesWebDriverExecuteAsync = true;\n          return this.executeAsync<T>(script, args);\n        }\n\n        // At least Safari 11, Jan 2019 will throw Timeout errors rather than\n        // ScriptTimeout errors for script timeouts\n        if (error.name === 'Timeout') {\n          error.name = 'ScriptTimeout';\n        }\n\n        throw error;\n      });\n  }\n\n  /**\n   * Gets a screenshot of the focused window and returns it in PNG format.\n   *\n   * @returns A buffer containing a PNG image.\n   */\n  takeScreenshot() {\n    return this.serverGet<string>('screenshot').then(data =>\n      Buffer.from(data, 'base64')\n    );\n  }\n\n  /**\n   * Gets a list of input method editor engines available to the remote\n   * environment. As of April 2014, no known remote environments support IME\n   * functions.\n   */\n  getAvailableImeEngines() {\n    return this.serverGet<string[]>('ime/available_engines');\n  }\n\n  /**\n   * Gets the currently active input method editor for the remote environment.\n   * As of April 2014, no known remote environments support IME functions.\n   */\n  getActiveImeEngine() {\n    return this.serverGet<string>('ime/active_engine');\n  }\n\n  /**\n   * Returns whether or not an input method editor is currently active in the\n   * remote environment. As of April 2014, no known remote environments\n   * support IME functions.\n   */\n  isImeActivated() {\n    return this.serverGet<boolean>('ime/activated');\n  }\n\n  /**\n   * Deactivates any active input method editor in the remote environment.\n   * As of April 2014, no known remote environments support IME functions.\n   */\n  deactivateIme() {\n    return this.serverPost<void>('ime/deactivate');\n  }\n\n  /**\n   * Activates an input method editor in the remote environment.\n   * As of April 2014, no known remote environments support IME functions.\n   *\n   * @param engine The type of IME to activate.\n   */\n  activateIme(engine: string) {\n    return this.serverPost<void>('ime/activate', { engine: engine });\n  }\n\n  /**\n   * Switches the currently focused frame to a new frame.\n   *\n   * @param id The frame to switch to. In most environments, a number or\n   * string value corresponds to a key in the `window.frames` object of the\n   * currently active frame. If `null`, the topmost (default) frame will be\n   * used. If an Element is provided, it must correspond to a `<frame>` or\n   * `<iframe>` element.\n   */\n  switchToFrame(\n    id: string | number | Element | null\n  ): CancellablePromise<void> {\n    if (this.capabilities.usesWebDriverFrameId && typeof id === 'string') {\n      return this.findById(id).then(element =>\n        this.serverPost<void>('frame', { id: element })\n      );\n    }\n\n    return this.serverPost<void>('frame', { id: id }).catch(error => {\n      if (\n        this.capabilities.usesWebDriverFrameId == null &&\n        (error.name === 'NoSuchFrame' ||\n          // At least geckodriver 0.24.0 throws an Unknown Command error\n          // with a message about an invalid tag name rather than a NoSuchFrame error\n          // (see https://github.com/mozilla/geckodriver/issues/1456)\n          /any variant of untagged/.test(error.detail.message))\n      ) {\n        this.capabilities.usesWebDriverFrameId = true;\n        return this.switchToFrame(id);\n      }\n      throw error;\n    });\n  }\n\n  /**\n   * Switches the currently focused window to a new window.\n   *\n   * @param handle The handle of the window to switch to. In mobile\n   * environments and environments based on the W3C WebDriver standard, this\n   * should be a handle as returned by\n   * [[Session.Session.getAllWindowHandles]].\n   *\n   * In environments using the JsonWireProtocol, this value corresponds to\n   * the `window.name` property of a window.\n   */\n  switchToWindow(handle: string) {\n    // const handleProperty = this.capabilities.=== 'selendroid' &&\n    let data: { [key: string]: string } = { name: handle };\n    if (this.capabilities.usesHandleParameter) {\n      data = { handle };\n    }\n    return this.serverPost<void>('window', data);\n  }\n\n  /**\n   * Switches the currently focused frame to the parent of the currently\n   * focused frame.\n   */\n  switchToParentFrame() {\n    return this.serverPost<void>('frame/parent').catch(error => {\n      // At least FirefoxDriver 2.40.0 does not implement this command,\n      // but we can fake it by retrieving the parent frame element using\n      // JavaScript and switching to it directly by reference At least\n      // Selendroid 0.9.0 also does not support this command, but\n      // unfortunately throws an incorrect error so it looks like a fatal\n      // error; see https://github.com/selendroid/selendroid/issues/364\n      if (\n        error.name === 'UnknownCommand' ||\n        (this.capabilities.browserName === 'selendroid' &&\n          error.message.indexOf(\n            'Error occured while communicating with selendroid server'\n          ) > -1)\n      ) {\n        if (this.capabilities.scriptedParentFrameCrashesBrowser) {\n          throw error;\n        }\n\n        return this.execute<Element>('return window.parent.frameElement;').then(\n          parent => {\n            // TODO: Using `null` if no parent frame was returned keeps\n            // the request from being invalid, but may be incorrect and\n            // may cause incorrect frame retargeting on certain\n            // platforms; At least Selendroid 0.9.0 fails both commands\n            return this.switchToFrame(parent || null);\n          }\n        );\n      }\n\n      throw error;\n    });\n  }\n\n  /**\n   * Closes the currently focused window. In most environments, after the\n   * window has been closed, it is necessary to explicitly switch to whatever\n   * window is now focused.\n   */\n  closeCurrentWindow() {\n    const self = this;\n    function manualClose() {\n      return self.getCurrentWindowHandle().then(function(handle: any) {\n        return self.execute('window.close();').then(function() {\n          self._closedWindows[handle] = true;\n        });\n      });\n    }\n\n    if (this.capabilities.brokenDeleteWindow) {\n      return manualClose();\n    }\n\n    return this.serverDelete<void>('window').catch(error => {\n      // ios-driver 0.6.6-SNAPSHOT April 2014 does not implement close\n      // window command\n      if (\n        error.name === 'UnknownCommand' &&\n        !this.capabilities.brokenDeleteWindow\n      ) {\n        this.capabilities.brokenDeleteWindow = true;\n        return manualClose();\n      }\n\n      throw error;\n    });\n  }\n\n  /**\n   * Sets the dimensions of a window.\n   *\n   * @param windowHandle The name of the window to resize. See\n   * [[Session.Session.switchToWindow]] to learn about valid window names.\n   * Omit this argument to resize the currently focused window.\n   *\n   * @param width The new width of the window, in CSS pixels.\n   *\n   * @param height The new height of the window, in CSS pixels.\n   */\n  setWindowSize(width: number, height: number): CancellablePromise<void>;\n  setWindowSize(\n    windowHandle: string,\n    width: number,\n    height: number\n  ): CancellablePromise<void>;\n  setWindowSize(...args: any[]) {\n    let [windowHandle, width, height] = args;\n\n    if (typeof height === 'undefined') {\n      height = width;\n      width = windowHandle;\n      windowHandle = null;\n    }\n\n    const data = { width, height };\n\n    if (this.capabilities.usesWebDriverWindowCommands) {\n      const setWindowSize = () =>\n        this.getWindowPosition().then(position =>\n          this.setWindowRect({\n            // At least Firefox + geckodriver 0.17.0 requires all 4 rect\n            // parameters have values\n            x: position.x,\n            y: position.y,\n            width: data.width,\n            height: data.height\n          })\n        );\n\n      if (windowHandle == null) {\n        return setWindowSize();\n      } else {\n        // User provided a window handle; get the current handle,\n        // switch to the new one, get the size, then switch back to the\n        // original handle.\n        let error: Error;\n        return this.getCurrentWindowHandle().then(originalHandle => {\n          return this.switchToWindow(windowHandle)\n            .then(() => setWindowSize())\n            .catch(_error => {\n              error = _error;\n            })\n            .then(() => this.switchToWindow(originalHandle))\n            .then(() => {\n              if (error) {\n                throw error;\n              }\n            });\n        });\n      }\n    } else {\n      if (windowHandle == null) {\n        windowHandle = 'current';\n      }\n      return this.serverPost<void>('window/$0/size', { width, height }, [\n        windowHandle\n      ]);\n    }\n  }\n\n  /**\n   * Gets the dimensions of a window.\n   *\n   * @param windowHandle The name of the window to query. See\n   * [[Session.Session.switchToWindow]] to learn about valid window names.\n   * Omit this argument to query the currently focused window.\n   *\n   * @returns An object describing the width and height of the window, in CSS\n   * pixels.\n   */\n  getWindowSize(windowHandle?: string) {\n    if (this.capabilities.usesWebDriverWindowCommands) {\n      const getWindowSize = () =>\n        this.getWindowRect().then(rect => ({\n          width: rect.width,\n          height: rect.height\n        }));\n\n      if (windowHandle == null) {\n        return getWindowSize();\n      } else {\n        // User provided a window handle; get the current handle,\n        // switch to the new one, get the size, then switch back to the\n        // original handle.\n        let error: Error;\n        let size: { width: number; height: number };\n        return this.getCurrentWindowHandle().then(originalHandle => {\n          return this.switchToWindow(windowHandle!)\n            .then(() => getWindowSize())\n            .then(\n              _size => {\n                size = _size;\n              },\n              _error => {\n                error = _error;\n              }\n            )\n            .then(() => this.switchToWindow(originalHandle))\n            .then(() => {\n              if (error) {\n                throw error;\n              }\n              return size;\n            });\n        });\n      }\n    } else {\n      if (windowHandle == null) {\n        windowHandle = 'current';\n      }\n      return this.serverGet<{\n        width: number;\n        height: number;\n      }>('window/$0/size', null, [windowHandle]);\n    }\n  }\n\n  /**\n   * Return the current window's rectangle (size and position).\n   */\n  getWindowRect() {\n    return this.serverGet<{\n      width: number;\n      height: number;\n      x: number;\n      y: number;\n    }>('window/rect');\n  }\n\n  /**\n   * Set the current window's rectangle (size and position).\n   *\n   * @param rect The windows rectangle. This may contain all 4 properties, or\n   * just x & y, or just width & height.\n   */\n  setWindowRect(rect: { x: number; y: number; width: number; height: number }) {\n    return this.serverPost<void>('window/rect', rect);\n  }\n\n  /**\n   * Sets the position of a window.\n   *\n   * Note that this method is not part of the W3C WebDriver standard.\n   *\n   * @param windowHandle The name of the window to move. See\n   * [[Session.Session.switchToWindow]] to learn about valid window names.\n   * Omit this argument to move the currently focused window.\n   *\n   * @param x The screen x-coordinate to move to, in CSS pixels, relative to\n   * the left edge of the primary monitor.\n   *\n   * @param y The screen y-coordinate to move to, in CSS pixels, relative to\n   * the top edge of the primary monitor.\n   */\n  setWindowPosition(x: number, y: number): CancellablePromise<void>;\n  setWindowPosition(\n    windowHandle: string,\n    x: number,\n    y: number\n  ): CancellablePromise<void>;\n  setWindowPosition(...args: any[]) {\n    let [windowHandle, x, y] = args;\n\n    if (typeof y === 'undefined') {\n      y = x;\n      x = windowHandle;\n      windowHandle = null;\n    }\n\n    if (this.capabilities.usesWebDriverWindowCommands) {\n      // At least Firefox + geckodriver 0.17.0 requires all 4 rect\n      // parameters have values\n      return this.getWindowSize().then(size => {\n        const data = { x, y, width: size.width, height: size.height };\n\n        if (windowHandle == null) {\n          return this.setWindowRect(data);\n        } else {\n          // User provided a window handle; get the current handle,\n          // switch to the new one, get the size, then switch back to the\n          // original handle.\n          let error: Error;\n          return this.getCurrentWindowHandle().then(originalHandle => {\n            if (originalHandle === windowHandle) {\n              this.setWindowRect(data);\n            } else {\n              return this.switchToWindow(windowHandle)\n                .then(() => this.setWindowRect(data))\n                .catch(_error => {\n                  error = _error;\n                })\n                .then(() => this.switchToWindow(originalHandle))\n                .then(() => {\n                  if (error) {\n                    throw error;\n                  }\n                });\n            }\n          });\n        }\n      });\n    } else {\n      if (windowHandle == null) {\n        windowHandle = 'current';\n      }\n      return this.serverPost<void>('window/$0/position', { x, y }, [\n        windowHandle\n      ]);\n    }\n  }\n\n  /**\n   * Gets the position of a window.\n   *\n   * Note that this method is not part of the W3C WebDriver standard.\n   *\n   * @param windowHandle The name of the window to query. See\n   * [[Session.Session.switchToWindow]] to learn about valid window names.\n   * Omit this argument to query the currently focused window.\n   *\n   * @returns An object describing the position of the window, in CSS pixels,\n   * relative to the top-left corner of the primary monitor. If a secondary\n   * monitor exists above or to the left of the primary monitor, these values\n   * will be negative.\n   */\n  getWindowPosition(windowHandle?: string) {\n    if (this.capabilities.usesWebDriverWindowCommands) {\n      const getWindowPosition = () =>\n        this.getWindowRect().then(({ x, y }) => {\n          return { x, y };\n        });\n\n      if (windowHandle == null) {\n        return getWindowPosition();\n      } else {\n        // User provided a window handle; get the current handle,\n        // switch to the new one, get the position, then switch back to\n        // the original handle.\n        let error: Error;\n        let position: { x: number; y: number };\n        return this.getCurrentWindowHandle().then(originalHandle => {\n          return this.switchToWindow(windowHandle!)\n            .then(() => getWindowPosition())\n            .then(\n              _position => {\n                position = _position;\n              },\n              _error => {\n                error = _error;\n              }\n            )\n            .then(() => this.switchToWindow(originalHandle))\n            .then(() => {\n              if (error) {\n                throw error;\n              }\n              return position;\n            });\n        });\n      }\n    } else {\n      if (typeof windowHandle === 'undefined') {\n        windowHandle = 'current';\n      }\n      return this.serverGet<{\n        x: number;\n        y: number;\n      }>('window/$0/position', null, [windowHandle]).then(position => {\n        // At least Firefox + geckodriver 0.19.0 will return a full\n        // rectangle for the position command.\n        return {\n          x: position.x,\n          y: position.y\n        };\n      });\n    }\n  }\n\n  /**\n   * Maximises a window according to the platform’s window system behaviour.\n   *\n   * @param windowHandle The name of the window to resize. See\n   * [[Session.Session.switchToWindow]] to learn about valid window names.\n   * Omit this argument to resize the currently focused window.\n   */\n  maximizeWindow(windowHandle?: string) {\n    if (this.capabilities.usesWebDriverWindowCommands) {\n      const maximizeWindow = () => this.serverPost<void>('window/maximize');\n\n      if (windowHandle == null) {\n        return maximizeWindow();\n      } else {\n        // User provided a window handle; get the current handle,\n        // switch to the new one, get the position, then switch back to\n        // the original handle.\n        let error: Error;\n        return this.getCurrentWindowHandle().then(originalHandle => {\n          return this.switchToWindow(windowHandle!)\n            .then(() => maximizeWindow())\n            .catch(_error => {\n              error = _error;\n            })\n            .then(() => this.switchToWindow(originalHandle))\n            .then(() => {\n              if (error) {\n                throw error;\n              }\n            });\n        });\n      }\n    } else {\n      if (typeof windowHandle === 'undefined') {\n        windowHandle = 'current';\n      }\n      return this.serverPost<void>('window/$0/maximize', null, [windowHandle]);\n    }\n  }\n\n  /**\n   * Gets all cookies set on the current page.\n   */\n  getCookies() {\n    return this.serverGet<WebDriverCookie[]>('cookie').then(function(\n      cookies: WebDriverCookie[]\n    ) {\n      // At least SafariDriver 2.41.0 returns cookies with extra class\n      // and hCode properties that should not exist\n      return (cookies || []).map(function(badCookie) {\n        let cookie: any = {};\n        for (let key in badCookie) {\n          if (\n            key === 'name' ||\n            key === 'value' ||\n            key === 'path' ||\n            key === 'domain' ||\n            key === 'secure' ||\n            key === 'httpOnly' ||\n            key === 'expiry'\n          ) {\n            cookie[key] = (<any>badCookie)[key];\n          }\n        }\n\n        if (typeof cookie.expiry === 'number') {\n          cookie.expiry = new Date(cookie.expiry * 1000);\n        }\n\n        return cookie;\n      });\n    });\n  }\n\n  /**\n   * Sets a cookie on the current page.\n   */\n  setCookie(cookie: WebDriverCookie) {\n    if (typeof cookie.expiry === 'string') {\n      cookie.expiry = new Date(cookie.expiry);\n    }\n\n    if (cookie.expiry instanceof Date) {\n      cookie.expiry = cookie.expiry.valueOf() / 1000;\n    }\n    const self = this;\n\n    return this.serverPost<void>('cookie', {\n      cookie: cookie\n    }).catch((error: SessionError) => {\n      // At least ios-driver 0.6.0-SNAPSHOT April 2014 does not know how\n      // to set cookies\n      if (error.name === 'UnknownCommand') {\n        // Per RFC6265 section 4.1.1, cookie names must match `token`\n        // (any US-ASCII character except for control characters and\n        // separators as defined in RFC2616 section 2.2)\n        if (/[^A-Za-z0-9!#$%&'*+.^_`|~-]/.test(cookie.name)) {\n          error = new Error();\n          error.status = '25';\n          error.name = statusCodes[error.status][0];\n          error.message = 'Invalid cookie name';\n          throw error;\n        }\n\n        if (\n          /[^\\u0021\\u0023-\\u002b\\u002d-\\u003a\\u003c-\\u005b\\u005d-\\u007e]/.test(\n            cookie.value\n          )\n        ) {\n          error = new Error();\n          error.status = '25';\n          error.name = statusCodes[error.status][0];\n          error.message = 'Invalid cookie value';\n          throw error;\n        }\n\n        const cookieToSet = [cookie.name + '=' + cookie.value];\n\n        pushCookieProperties(cookieToSet, cookie);\n\n        return self.execute<void>(\n          /* istanbul ignore next */ function(cookie: any) {\n            document.cookie = cookie;\n          },\n          [cookieToSet.join(';')]\n        );\n      }\n\n      throw error;\n    });\n  }\n\n  /**\n   * Clears all cookies for the current page.\n   */\n  clearCookies() {\n    if (this.capabilities.brokenDeleteCookie) {\n      return this.getCookies().then(cookies => {\n        return cookies.reduce((promise, cookie) => {\n          const expiredCookie = [\n            `${cookie.name}=`,\n            'expires=Thu, 01 Jan 1970 00:00:00 GMT'\n          ];\n          pushCookieProperties(expiredCookie, cookie);\n\n          return promise.then(() => {\n            return this.execute<void>(\n              /* istanbul ignore next */ function(expiredCookie: string) {\n                // Assume the cookie was created by Selenium,\n                // so its path is '/'; at least MS Edge\n                // requires a path to delete a cookie\n                document.cookie = `${expiredCookie}; domain=${encodeURIComponent(\n                  document.domain\n                )}; path=/`;\n              },\n              [expiredCookie.join(';')]\n            );\n          });\n        }, Task.resolve());\n      });\n    }\n\n    return this.serverDelete<void>('cookie');\n  }\n\n  /**\n   * Deletes a cookie on the current page.\n   *\n   * @param name The name of the cookie to delete.\n   */\n  deleteCookie(name: string) {\n    if (this.capabilities.brokenDeleteCookie) {\n      return this.getCookies().then(cookies => {\n        let cookie: any;\n        if (\n          cookies.some(value => {\n            if (value.name === name) {\n              cookie = value;\n              return true;\n            }\n            return false;\n          })\n        ) {\n          const expiredCookie = [\n            `${cookie.name}=`,\n            'expires=Thu, 01 Jan 1970 00:00:00 GMT'\n          ];\n\n          pushCookieProperties(expiredCookie, cookie);\n\n          return this.execute<void>(\n            /* istanbul ignore next */ function(expiredCookie: any) {\n              // Assume the cookie was created by Selenium, so\n              // its path is '/'; at least MS Edge requires a\n              // path to delete a cookie\n              document.cookie = `${expiredCookie}; domain=${encodeURIComponent(\n                document.domain\n              )}; path=/`;\n            },\n            [expiredCookie.join(';')]\n          );\n        }\n      });\n    }\n\n    return this.serverDelete<void>('cookie/$0', null, [name]);\n  }\n\n  /**\n   * Gets the HTML loaded in the focused window/frame. This markup is\n   * serialised by the remote environment so may not exactly match the HTML\n   * provided by the Web server.\n   */\n  getPageSource() {\n    if (this.capabilities.brokenPageSource) {\n      return this.execute<string>(\n        /* istanbul ignore next */ function() {\n          return document.documentElement!.outerHTML;\n        }\n      );\n    } else {\n      return this.serverGet<string>('source');\n    }\n  }\n\n  /**\n   * Gets the title of the top-level browsing context of the current window\n   * or tab.\n   */\n  getPageTitle() {\n    return this.serverGet<string>('title');\n  }\n\n  /**\n   * Gets the first element from the focused window/frame that matches the\n   * given query.\n   *\n   * See [[Session.Session.setFindTimeout]] to set the amount of time it the\n   * remote environment should spend waiting for an element that does not\n   * exist at the time of the `find` call before timing out.\n   *\n   * @param using The element retrieval strategy to use. One of 'class name',\n   * 'css selector', 'id', 'name', 'link text', 'partial link text', 'tag\n   * name', 'xpath'.\n   *\n   * @param value The strategy-specific value to search for. For example, if\n   * `using` is 'id', `value` should be the ID of the element to retrieve.\n   */\n  find(using: Strategy, value: string): CancellablePromise<Element> {\n    if (this.capabilities.usesWebDriverLocators) {\n      const locator = toW3cLocator(using, value);\n      using = locator.using;\n      value = locator.value;\n    }\n\n    if (\n      using.indexOf('link text') !== -1 &&\n      (this.capabilities.brokenWhitespaceNormalization ||\n        this.capabilities.brokenLinkTextLocator)\n    ) {\n      return this.execute<Element>(manualFindByLinkText, [using, value]).then(\n        element => {\n          if (!element) {\n            const error = new Error();\n            error.name = 'NoSuchElement';\n            throw error;\n          }\n          return new Element(element, this);\n        }\n      );\n    }\n\n    return this.serverPost<ElementOrElementId>('element', {\n      using: using,\n      value: value\n    }).then(\n      element => {\n        return new Element(element, this);\n      },\n\n      error => {\n        if (\n          !this.capabilities.usesWebDriverLocators &&\n          /search strategy: 'id'/.test(error.message)\n        ) {\n          this.capabilities.usesWebDriverLocators = true;\n          return this.find(using, value);\n        }\n\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * Gets an array of elements from the focused window/frame that match the\n   * given query.\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  findAll(using: Strategy, value: string): CancellablePromise<Element[]> {\n    if (this.capabilities.usesWebDriverLocators) {\n      const locator = toW3cLocator(using, value);\n      using = locator.using;\n      value = locator.value;\n    }\n\n    if (\n      using.indexOf('link text') !== -1 &&\n      (this.capabilities.brokenWhitespaceNormalization ||\n        this.capabilities.brokenLinkTextLocator)\n    ) {\n      return this.execute<Element[]>(manualFindByLinkText, [\n        using,\n        value,\n        true\n      ]).then(elements => {\n        return elements.map((element: ElementOrElementId) => {\n          return new Element(element, this);\n        });\n      });\n    }\n\n    return this.serverPost<any[]>('elements', {\n      using: using,\n      value: value\n    }).then(\n      elements => {\n        return elements.map((element: ElementOrElementId) => {\n          return new Element(element, this);\n        });\n      },\n\n      error => {\n        if (\n          !this.capabilities.usesWebDriverLocators &&\n          /search strategy: 'id'/.test(error.message)\n        ) {\n          this.capabilities.usesWebDriverLocators = true;\n          return this.findAll(using, value);\n        }\n\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * Gets the currently focused element from the focused window/frame.\n   */\n  @forCommand({ createsContext: true })\n  getActiveElement(): CancellablePromise<Element> {\n    const getDocumentActiveElement = () => {\n      return this.execute<Element>('return document.activeElement;');\n    };\n\n    if (this.capabilities.brokenActiveElement) {\n      return getDocumentActiveElement();\n    } else {\n      let task: CancellablePromise<ElementOrElementId>;\n\n      if (this.capabilities.usesWebDriverActiveElement) {\n        task = this.serverGet<ElementOrElementId>('element/active');\n      } else {\n        task = this.serverPost<ElementOrElementId>('element/active');\n      }\n\n      return task.then(\n        (element: ElementOrElementId) => {\n          if (element) {\n            return new Element(element, this);\n          } else {\n            // The driver will return `null` if the active element is\n            // the body element; for consistency with how the DOM\n            // `document.activeElement` property works, we’ll diverge\n            // and always return an element\n            return getDocumentActiveElement();\n          }\n        },\n        error => {\n          if (\n            error.name === 'UnknownMethod' &&\n            !this.capabilities.usesWebDriverActiveElement\n          ) {\n            this.capabilities.usesWebDriverActiveElement = true;\n            return this.getActiveElement();\n          }\n          throw error;\n        }\n      );\n    }\n  }\n\n  /**\n   * Types into the focused window/frame/element.\n   *\n   * @param keys The text to type in the remote environment. It is possible\n   * to type keys that do not have normal character representations (modifier\n   * keys, function keys, etc.) as well as keys that have two different\n   * representations on a typical US-ASCII keyboard (numpad keys); use the\n   * values from [[keys]] to type these special characters. Any modifier keys\n   * that are activated by this call will persist until they are deactivated.\n   * To deactivate a modifier key, type the same modifier key a second time,\n   * or send `\\uE000` ('NULL') to deactivate all currently active modifier\n   * keys.\n   */\n  pressKeys(keys: string | string[]) {\n    if (!Array.isArray(keys)) {\n      keys = [keys];\n    }\n\n    if (this.capabilities.brokenSendKeys || this.capabilities.noKeysCommand) {\n      return this.execute(simulateKeys, [keys]);\n    }\n\n    return this.serverPost<void>('keys', {\n      value: keys\n    });\n  }\n\n  /**\n   * Gets the current screen orientation.\n   *\n   * @returns Either 'portrait' or 'landscape'.\n   */\n  getOrientation() {\n    return this.serverGet<'portrait' | 'landscape'>('orientation').then(\n      function(orientation) {\n        return orientation.toLowerCase();\n      }\n    );\n  }\n\n  /**\n   * Sets the screen orientation.\n   *\n   * @param orientation Either 'portrait' or 'landscape'.\n   */\n  setOrientation(orientation: string) {\n    orientation = orientation.toUpperCase();\n\n    return this.serverPost<void>('orientation', {\n      orientation: orientation\n    });\n  }\n\n  /**\n   * Gets the text displayed in the currently active alert pop-up.\n   */\n  getAlertText() {\n    return this.serverGet<string>('alert_text');\n  }\n\n  /**\n   * Types into the currently active prompt pop-up.\n   *\n   * @param text The text to type into the pop-up’s input box.\n   */\n  typeInPrompt(text: string | string[]) {\n    if (Array.isArray(text)) {\n      text = text.join('');\n    }\n\n    return this.serverPost<void>('alert_text', {\n      text: text\n    });\n  }\n\n  /**\n   * Accepts an alert, prompt, or confirmation pop-up. Equivalent to clicking\n   * the 'OK' button.\n   */\n  acceptAlert() {\n    return this.serverPost<void>('accept_alert');\n  }\n\n  /**\n   * Dismisses an alert, prompt, or confirmation pop-up. Equivalent to\n   * clicking the 'OK' button of an alert pop-up or the 'Cancel' button of a\n   * prompt or confirmation pop-up.\n   */\n  dismissAlert() {\n    return this.serverPost<void>('dismiss_alert');\n  }\n\n  /**\n   * Moves the remote environment’s mouse cursor to the specified element or\n   * relative position. If the element is outside of the viewport, the remote\n   * driver will attempt to scroll it into view automatically.\n   *\n   * @param element The element to move the mouse to. If x-offset and\n   * y-offset are not specified, the mouse will be moved to the centre of the\n   * element.\n   *\n   * @param xOffset The x-offset of the cursor, maybe in CSS pixels, relative\n   * to the left edge of the specified element’s bounding client rectangle.\n   * If no element is specified, the offset is relative to the previous\n   * position of the mouse, or to the left edge of the page’s root element if\n   * the mouse was never moved before.\n   *\n   * @param yOffset The y-offset of the cursor, maybe in CSS pixels, relative\n   * to the top edge of the specified element’s bounding client rectangle. If\n   * no element is specified, the offset is relative to the previous position\n   * of the mouse, or to the top edge of the page’s root element if the mouse\n   * was never moved before.\n   */\n  moveMouseTo(): CancellablePromise<void>;\n  moveMouseTo(xOffset?: number, yOffset?: number): CancellablePromise<void>;\n  moveMouseTo(\n    element?: Element,\n    xOffset?: number,\n    yOffset?: number\n  ): CancellablePromise<void>;\n  @forCommand({ usesElement: true })\n  moveMouseTo(...args: any[]) {\n    let [element, xOffset, yOffset] = args;\n\n    if (typeof yOffset === 'undefined' && typeof xOffset !== 'undefined') {\n      yOffset = xOffset;\n      xOffset = element;\n      element = null;\n    }\n\n    if (this.capabilities.brokenMouseEvents) {\n      return this.execute<void>(simulateMouse, [\n        {\n          action: 'mousemove',\n          position: this._lastMousePosition,\n          element: element,\n          xOffset: xOffset,\n          yOffset: yOffset\n        }\n      ]).then(newPosition => {\n        this._lastMousePosition = newPosition;\n      });\n    }\n\n    if (element) {\n      element = element.elementId;\n    } else if (!this._movedToElement) {\n      // If the mouse has not been moved to any element on this page yet,\n      // drivers will either throw errors (FirefoxDriver 2.40.0) or\n      // silently fail (ChromeDriver 2.9) when trying to move the mouse\n      // cursor relative to the \"previous\" position; in this case, we\n      // just assume that the mouse position defaults to the top-left\n      // corner of the document\n      if (this.capabilities.brokenHtmlMouseMove) {\n        return this.execute<Element>('return document.body;').then(element => {\n          return element\n            .getPosition()\n            .then((position: { x: number; y: number }) => {\n              return this.moveMouseTo(\n                element,\n                xOffset - position.x,\n                yOffset - position.y\n              );\n            });\n        });\n      } else {\n        return this.execute<Element>('return document.documentElement;').then(\n          element => {\n            return this.moveMouseTo(element, xOffset, yOffset);\n          }\n        );\n      }\n    }\n\n    const data: { element?: Element; xoffset?: number; yoffset?: number } = {};\n    if (element) {\n      data.element = element;\n    }\n    if (xOffset != null) {\n      data.xoffset = xOffset;\n    }\n    if (yOffset != null) {\n      data.yoffset = yOffset;\n    }\n\n    return this.serverPost<void>('moveto', data).then(() => {\n      this._movedToElement = true;\n    });\n  }\n\n  /**\n   * Clicks a mouse button at the point where the mouse cursor is currently\n   * positioned. This method may fail to execute with an error if the mouse\n   * has not been moved anywhere since the page was loaded.\n   *\n   * @param button The button to click. 0 corresponds to the primary mouse\n   * button, 1 to the middle mouse button, 2 to the secondary mouse button.\n   * Numbers above 2 correspond to any additional buttons a mouse might\n   * provide.\n   */\n  clickMouseButton(button?: number) {\n    if (this.capabilities.brokenMouseEvents) {\n      return this.execute<void>(simulateMouse, [\n        {\n          action: 'click',\n          button: button,\n          position: this._lastMousePosition\n        }\n      ]);\n    }\n\n    return this.serverPost<void>('click', {\n      button: button\n    }).then(() => {\n      // ios-driver 0.6.6-SNAPSHOT April 2014 does not wait until the\n      // default action for a click event occurs before returning\n      if (this.capabilities.touchEnabled) {\n        return sleep(300);\n      }\n    });\n  }\n\n  /**\n   * Depresses a mouse button without releasing it.\n   *\n   * @param button The button to press. See [[Session.Session.click]] for\n   * available options.\n   */\n  pressMouseButton(button?: number) {\n    if (this.capabilities.brokenMouseEvents) {\n      return this.execute<void>(simulateMouse, [\n        {\n          action: 'mousedown',\n          button: button,\n          position: this._lastMousePosition\n        }\n      ]);\n    }\n\n    return this.serverPost<void>('buttondown', {\n      button: button\n    });\n  }\n\n  /**\n   * Releases a previously depressed mouse button.\n   *\n   * @param button The button to press. See [[Session.Session.click]] for\n   * available options.\n   */\n  releaseMouseButton(button?: number) {\n    if (this.capabilities.brokenMouseEvents) {\n      return this.execute<void>(simulateMouse, [\n        {\n          action: 'mouseup',\n          button: button,\n          position: this._lastMousePosition\n        }\n      ]);\n    }\n\n    return this.serverPost<void>('buttonup', {\n      button: button\n    });\n  }\n\n  /**\n   * Double-clicks the primary mouse button.\n   */\n  doubleClick(): CancellablePromise<void> {\n    if (this.capabilities.brokenMouseEvents) {\n      return this.execute<void>(simulateMouse, [\n        {\n          action: 'dblclick',\n          button: 0,\n          position: this._lastMousePosition\n        }\n      ]);\n    }\n\n    if (this.capabilities.brokenDoubleClick) {\n      return this.pressMouseButton()\n        .then(() => {\n          return this.releaseMouseButton();\n        })\n        .then(() => this.serverPost<void>('doubleclick'));\n    }\n\n    return this.serverPost<void>('doubleclick').catch(() => {\n      if (this.capabilities.brokenDoubleClick == null) {\n        this.capabilities.brokenDoubleClick = true;\n        return this.doubleClick();\n      }\n    });\n  }\n\n  /**\n   * Taps an element on a touch screen device. If the element is outside of\n   * the viewport, the remote driver will attempt to scroll it into view\n   * automatically.\n   *\n   * @param element The element to tap.\n   */\n  @forCommand({ usesElement: true })\n  tap(element: Element) {\n    return this.serverPost<void>('touch/click', {\n      element: element.elementId\n    });\n  }\n\n  /**\n   * Depresses a new finger at the given point on a touch screen device\n   * without releasing it.\n   *\n   * @param x The screen x-coordinate to press, maybe in device pixels.\n   * @param y The screen y-coordinate to press, maybe in device pixels.\n   */\n  pressFinger(x: number, y: number) {\n    // TODO: If someone specifies the same coordinates as as an existing\n    // finger, will it switch the active finger back to that finger instead\n    // of adding a new one?\n    return this.serverPost<void>('touch/down', { x: x, y: y });\n  }\n\n  /**\n   * Releases whatever finger exists at the given point on a touch screen\n   * device.\n   *\n   * @param x The screen x-coordinate where a finger is pressed, maybe in\n   * device pixels.\n   * @param y The screen y-coordinate where a finger is pressed, maybe in\n   * device pixels.\n   */\n  releaseFinger(x: number, y: number) {\n    return this.serverPost<void>('touch/up', { x: x, y: y });\n  }\n\n  /**\n   * Moves the last depressed finger to a new point on the touch screen.\n   *\n   * @param x The screen x-coordinate to move to, maybe in device pixels.\n   * @param y The screen y-coordinate to move to, maybe in device pixels.\n   */\n  moveFinger(x: number, y: number) {\n    return this.serverPost<void>('touch/move', { x: x, y: y });\n  }\n\n  /**\n   * Scrolls the currently focused window on a touch screen device.\n   *\n   * @param element An element to scroll to. The window will be scrolled so\n   * the element is as close to the top-left corner of the window as\n   * possible.\n   *\n   * @param xOffset An optional x-offset, relative to the left edge of the\n   * element, in CSS pixels. If no element is specified, the offset is\n   * relative to the previous scroll position of the window.\n   *\n   * @param yOffset An optional y-offset, relative to the top edge of the\n   * element, in CSS pixels. If no element is specified, the offset is\n   * relative to the previous scroll position of the window.\n   */\n  touchScroll(xOffset: number, yOffset: number): CancellablePromise<void>;\n  touchScroll(\n    element?: Element,\n    xOffset?: number,\n    yOffset?: number\n  ): CancellablePromise<void>;\n  @forCommand({ usesElement: true })\n  touchScroll(...args: any[]) {\n    let [element, xOffset, yOffset] = args;\n    if (typeof yOffset === 'undefined' && typeof xOffset !== 'undefined') {\n      yOffset = xOffset;\n      xOffset = element;\n      element = undefined;\n    }\n\n    if (this.capabilities.brokenTouchScroll) {\n      return this.execute<void>(\n        /* istanbul ignore next */ function(\n          element: HTMLElement,\n          x: number,\n          y: number\n        ) {\n          const rect = { left: window.scrollX, top: window.scrollY };\n          if (element) {\n            const bbox = element.getBoundingClientRect();\n            rect.left += bbox.left;\n            rect.top += bbox.top;\n          }\n\n          window.scrollTo(rect.left + x, rect.top + y);\n        },\n        [element, xOffset, yOffset]\n      );\n    }\n\n    if (element) {\n      element = element.elementId;\n    }\n\n    // TODO: If using this, please correct for device pixel ratio to ensure\n    // consistency\n    return this.serverPost<void>('touch/scroll', {\n      element: element,\n      xoffset: xOffset,\n      yoffset: yOffset\n    });\n  }\n\n  /**\n   * Performs a double-tap gesture on an element.\n   *\n   * @param element The element to double-tap.\n   */\n  @forCommand({ usesElement: true })\n  doubleTap(element?: Element) {\n    const elementId = element && element.elementId;\n    return this.serverPost<void>('touch/doubleclick', {\n      element: elementId\n    });\n  }\n\n  /**\n   * Performs a long-tap gesture on an element.\n   *\n   * @param element The element to long-tap.\n   */\n  @forCommand({ usesElement: true })\n  longTap(element?: Element) {\n    const elementId = element && element.elementId;\n    return this.serverPost<void>('touch/longclick', { element: elementId });\n  }\n\n  /**\n   * Flicks a finger. Note that this method is currently badly specified and\n   * highly dysfunctional and is only provided for the sake of completeness.\n   *\n   * @param element The element where the flick should start.\n   * @param xOffset The x-offset in pixels to flick by.\n   * @param yOffset The x-offset in pixels to flick by.\n   * @param speed The speed of the flick, in pixels per *second*. Most human\n   * flicks are 100–200ms, so this value will be higher than expected.\n   */\n  flickFinger(\n    element: Element,\n    xOffset: number,\n    yOffset: number,\n    speed?: number\n  ): CancellablePromise<void>;\n  flickFinger(\n    xOffset: number,\n    yOffset: number,\n    speed?: number\n  ): CancellablePromise<void>;\n  @forCommand({ usesElement: true })\n  flickFinger(...args: any[]) {\n    let [element, xOffset, yOffset, speed] = args;\n    if (\n      typeof speed === 'undefined' &&\n      typeof yOffset === 'undefined' &&\n      typeof xOffset !== 'undefined'\n    ) {\n      return this.serverPost<void>('touch/flick', {\n        xspeed: element,\n        yspeed: xOffset\n      });\n    }\n\n    // if (element) {\n    // \telement = element.elementId;\n    // }\n\n    return this.serverPost<void>('touch/flick', {\n      element: element.elementId,\n      xoffset: xOffset,\n      yoffset: yOffset,\n      speed: speed\n    });\n  }\n\n  /**\n   * Gets the current geographical location of the remote environment.\n   *\n   * @returns Latitude and longitude are specified using standard WGS84\n   * decimal latitude/longitude. Altitude is specified as meters above the\n   * WGS84 ellipsoid. Not all environments support altitude.\n   */\n  getGeolocation() {\n    return this.serverGet<Geolocation>('location').then(location => {\n      // ChromeDriver 2.9 ignores altitude being set and then returns 0;\n      // to match the Geolocation API specification, we will just pretend\n      // that altitude is not supported by the browser at all by changing\n      // the value to `null` if it is zero but the last set value was not\n      // zero\n      if (location.altitude === 0 && this._lastAltitude !== location.altitude) {\n        location.altitude = undefined;\n      }\n\n      return location;\n    });\n  }\n\n  /**\n   * Sets the geographical location of the remote environment.\n   *\n   * @param location Latitude and longitude are specified using standard\n   * WGS84 decimal latitude/longitude. Altitude is specified as meters above\n   * the WGS84 ellipsoid. Not all environments support altitude.\n   */\n  setGeolocation(location: Geolocation) {\n    // TODO: Is it weird that this accepts an object argument? `setCookie`\n    // does too, but nothing else does.\n    if (location.altitude !== undefined) {\n      this._lastAltitude = location.altitude;\n    }\n\n    return this.serverPost<void>('location', { location });\n  }\n\n  /**\n   * Gets all logs from the remote environment of the given type. The logs in\n   * the remote environment are cleared once they have been retrieved.\n   *\n   * @param type The type of log entries to retrieve. Available log types\n   * differ between remote environments. Use\n   * [[Session.Session.getAvailableLogTypes]] to learn what log types are\n   * currently available. Not all environments support all possible log\n   * types.\n   *\n   * @returns An array of log entry objects. Timestamps in log entries are\n   * Unix timestamps, in seconds.\n   */\n  getLogsFor(type: string) {\n    return this.serverPost<string[] | LogEntry[]>('log', {\n      type: type\n    }).then(function(logs) {\n      // At least Selendroid 0.9.0 returns logs as an array of strings\n      // instead of an array of log objects, which is a spec violation;\n      // see https://github.com/selendroid/selendroid/issues/366\n      if (!logs) {\n        return logs;\n      }\n\n      if (isStringArray(logs)) {\n        return logs.map(log => {\n          const logData = /\\[([^\\]]+)\\]\\s*\\[([^\\]]+)\\]\\s*(.*)/.exec(log);\n          let entry: LogEntry;\n\n          if (logData) {\n            entry = {\n              timestamp: Date.parse(logData[1]) / 1000,\n              level: logData[2],\n              message: logData[3]\n            };\n          } else {\n            entry = {\n              timestamp: NaN,\n              level: 'INFO',\n              message: log\n            };\n          }\n\n          return entry;\n        });\n      } else {\n        return logs;\n      }\n    });\n  }\n\n  /**\n   * Gets the types of logs that are currently available for retrieval from\n   * the remote environment.\n   */\n  getAvailableLogTypes() {\n    if (this.capabilities.fixedLogTypes) {\n      return Task.resolve<string[]>(this.capabilities.fixedLogTypes);\n    }\n\n    return this.serverGet<string[]>('log/types');\n  }\n\n  /**\n   * Gets the current state of the HTML5 application cache for the current\n   * page.\n   *\n   * @returns The cache status. One of 0 (uncached), 1 (cached/idle), 2\n   * (checking), 3 (downloading), 4 (update ready), 5 (obsolete).\n   */\n  getApplicationCacheStatus() {\n    return this.serverGet<number>('application_cache/status');\n  }\n\n  /**\n   * Terminates the session. No more commands will be accepted by the remote\n   * after this point.\n   */\n  quit() {\n    return this._server.deleteSession(this._sessionId);\n  }\n\n  /**\n   * Gets the list of keys set in local storage for the focused window/frame.\n   */\n  getLocalStorageKeys() {\n    return this.serverGet<string[]>('local_storage');\n  }\n\n  /**\n   * Sets a value in local storage for the focused window/frame.\n   *\n   * @param key The key to set.\n   * @param value The value to set.\n   */\n  setLocalStorageItem(key: string, value: string) {\n    return this.serverPost<void>('local_storage', { key, value });\n  }\n\n  /**\n   * Clears all data in local storage for the focused window/frame.\n   */\n  clearLocalStorage() {\n    return this.serverDelete<void>('local_storage');\n  }\n\n  /**\n   * Gets a value from local storage for the focused window/frame.\n   *\n   * @param key The key of the data to get.\n   */\n  getLocalStorageItem(key: string) {\n    return this.serverGet<string>('local_storage/key/$0', null, [key]);\n  }\n\n  /**\n   * Deletes a value from local storage for the focused window/frame.\n   *\n   * @param key The key of the data to delete.\n   */\n  deleteLocalStorageItem(key: string) {\n    return this.serverDelete<void>('local_storage/key/$0', null, [key]);\n  }\n\n  /**\n   * Gets the number of keys set in local storage for the focused\n   * window/frame.\n   */\n  getLocalStorageLength() {\n    return this.serverGet<number>('local_storage/size');\n  }\n\n  /**\n   * Gets the list of keys set in session storage for the focused\n   * window/frame.\n   */\n  getSessionStorageKeys() {\n    return this.serverGet<string[]>('session_storage');\n  }\n\n  /**\n   * Sets a value in session storage for the focused window/frame.\n   *\n   * @param key The key to set.\n   * @param value The value to set.\n   */\n  setSessionStorageItem(key: string, value: string) {\n    return this.serverPost<void>('session_storage', { key, value });\n  }\n\n  /**\n   * Clears all data in session storage for the focused window/frame.\n   */\n  clearSessionStorage() {\n    return this.serverDelete<void>('session_storage');\n  }\n\n  /**\n   * Gets a value from session storage for the focused window/frame.\n   *\n   * @param key The key of the data to get.\n   */\n  getSessionStorageItem(key: string) {\n    return this.serverGet<string>('session_storage/key/$0', null, [key]);\n  }\n\n  /**\n   * Deletes a value from session storage for the focused window/frame.\n   *\n   * @param key The key of the data to delete.\n   */\n  deleteSessionStorageItem(key: string) {\n    return this.serverDelete<void>('session_storage/key/$0', null, [key]);\n  }\n\n  /**\n   * Gets the number of keys set in session storage for the focused\n   * window/frame.\n   */\n  getSessionStorageLength() {\n    return this.serverGet<number>('session_storage/size');\n  }\n\n  /**\n   * Gets the first [[Element.Element.isDisplayed|displayed]] element in the\n   * currently active window/frame matching the given query. This is\n   * inherently slower than [[Session.Session.find]], so should only be used\n   * in cases where the visibility of an element cannot be ensured in\n   * advance.\n   *\n   * @since 1.6\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  findDisplayed(using: Strategy, value: string) {\n    return findDisplayed(this, this, using, value);\n  }\n\n  /**\n   * Waits for all elements in the currently active window/frame to be\n   * destroyed.\n   *\n   * @param using The element retrieval strategy to use. See\n   * [[Session.Session.find]] for options.\n   *\n   * @param value The strategy-specific value to search for. See\n   * [[Session.Session.find]] for details.\n   */\n  waitForDeleted(using: Strategy, value: string) {\n    return waitForDeleted(this, this, using, value);\n  }\n\n  /**\n   * Gets the timeout for [[Session.Session.executeAsync]] calls.\n   */\n  getExecuteAsyncTimeout() {\n    return this.getTimeout('script');\n  }\n\n  /**\n   * Sets the timeout for [[Session.Session.executeAsync]] calls.\n   *\n   * @param ms The length of the timeout, in milliseconds.\n   */\n  setExecuteAsyncTimeout(ms: number) {\n    return this.setTimeout('script', ms);\n  }\n\n  /**\n   * Gets the timeout for [[Session.Session.find]] calls.\n   */\n  getFindTimeout() {\n    return this.getTimeout('implicit');\n  }\n\n  /**\n   * Sets the timeout for [[Session.Session.find]] calls.\n   *\n   * @param ms The length of the timeout, in milliseconds.\n   */\n  setFindTimeout(ms: number) {\n    return this.setTimeout('implicit', ms);\n  }\n\n  /**\n   * Gets the timeout for [[Session.Session.get]] calls.\n   */\n  getPageLoadTimeout() {\n    return this.getTimeout('page load');\n  }\n\n  /**\n   * Sets the timeout for [[Session.Session.get]] calls.\n   *\n   * @param ms The length of the timeout, in milliseconds.\n   */\n  setPageLoadTimeout(ms: number) {\n    return this.setTimeout('page load', ms);\n  }\n}\n\nexport interface WebDriverTimeouts {\n  script: number;\n  pageLoad: number;\n  implicit: number;\n}\n\ninterface SessionError extends Error {\n  status?: keyof typeof statusCodes;\n}\n\ntype Timeout = 'script' | 'implicit' | 'page load';\n\n/**\n * Decorator for the [[util.forCommand]] method\n */\nfunction forCommand(properties: {\n  usesElement?: boolean;\n  createsContext?: boolean;\n}) {\n  return function(\n    target: any,\n    property: string,\n    descriptor: PropertyDescriptor\n  ) {\n    const fn = <Function>target[property];\n    descriptor.value = utilForCommand(fn, properties);\n  };\n}\n\n/**\n * Finds and converts serialised DOM element objects into fully-featured typed\n * Elements.\n *\n * @param session The session from which the Element was retrieved.\n * @param value An object or array that may be, or may contain, serialised DOM\n * element objects.\n * @returns The input value, with all serialised DOM element objects converted\n * to typed Elements.\n */\nfunction convertToElements(session: Session, value: any) {\n  // TODO: Unit test elements attached to objects\n  function convert(value: any) {\n    if (Array.isArray(value)) {\n      value = value.map(convert);\n    } else if (typeof value === 'object' && value !== null) {\n      if (value.ELEMENT || value['element-6066-11e4-a52e-4f735466cecf']) {\n        value = new Element(value, session);\n      } else {\n        for (let k in value) {\n          value[k] = convert(value[k]);\n        }\n      }\n    }\n\n    return value;\n  }\n\n  return convert(value);\n}\n\n/**\n * As of Selenium 2.40.0 (March 2014), all drivers incorrectly transmit an\n * UnknownError instead of a JavaScriptError when user code fails to execute\n * correctly. This method corrects this status code, under the assumption that\n * drivers will follow the spec in future.\n */\nfunction fixExecuteError(error: SessionError) {\n  if (error.name === 'UnknownError') {\n    error.status = '17';\n    error.name = statusCodes[error.status][0];\n  }\n\n  throw error;\n}\n\n/**\n * HTTP cookies are transmitted as semicolon-delimited strings, with a\n * `key=value` pair giving the cookie’s name and value, then additional\n * information about the cookie (expiry, path, domain, etc.) as additional k-v\n * pairs. This method takes an Array describing the parts of a cookie\n * (`target`), and a hash map containing the additional information (`source`),\n * and pushes the properties from the source object onto the target array as\n * properly escaped key-value strings.\n */\nfunction pushCookieProperties(target: any[], source: any) {\n  Object.keys(source).forEach(function(key) {\n    let value = source[key];\n\n    if (\n      key === 'name' ||\n      key === 'value' ||\n      (key === 'domain' && value === 'http')\n    ) {\n      return;\n    }\n\n    if (typeof value === 'boolean') {\n      value && target.push(key);\n    } else if (key === 'expiry') {\n      // JsonWireProtocol uses the key 'expiry' but JavaScript cookies\n      // use the key 'expires'\n      if (typeof value === 'number') {\n        value = new Date(value * 1000);\n      }\n\n      if (value instanceof Date) {\n        value = value.toUTCString();\n      }\n\n      target.push('expires=' + encodeURIComponent(value));\n    } else {\n      target.push(key + '=' + encodeURIComponent(value));\n    }\n  });\n}\n\n/* istanbul ignore next */\n/**\n * Simulates a keyboard event as it would occur on Safari 7.\n *\n * @param keys Keys to type.\n */\nfunction simulateKeys(keys: string[]) {\n  const target = <any>document.activeElement;\n\n  function dispatch(kwArgs: any) {\n    let event: KeyboardEvent;\n\n    if (typeof KeyboardEvent === 'function') {\n      event = new KeyboardEvent(kwArgs.type, {\n        bubbles: true,\n        cancelable: kwArgs.cancelable || false,\n        view: window,\n        key: kwArgs.key || '',\n        location: 3\n      });\n    } else {\n      event = document.createEvent('KeyboardEvent');\n      event.initKeyboardEvent(\n        kwArgs.type,\n        true,\n        kwArgs.cancelable || false,\n        window,\n        kwArgs.key || '',\n        3,\n        '',\n        <any>0,\n        ''\n      );\n    }\n\n    return target.dispatchEvent(event);\n  }\n\n  function dispatchInput() {\n    let event: Event;\n    if (typeof Event === 'function') {\n      event = new Event('input', { bubbles: true, cancelable: false });\n    } else {\n      event = document.createEvent('Event');\n      event.initEvent('input', true, false);\n    }\n    return target.dispatchEvent(event);\n  }\n\n  keys = (<string[]>[]).concat(...keys.map(keys => keys.split('')));\n\n  for (let i = 0, j = keys.length; i < j; ++i) {\n    const key = keys[i];\n    let performDefault = true;\n\n    performDefault = dispatch({\n      type: 'keydown',\n      cancelable: true,\n      key: key\n    });\n    performDefault =\n      performDefault &&\n      dispatch({ type: 'keypress', cancelable: true, key: key });\n\n    if (performDefault) {\n      if ('value' in target) {\n        target.value =\n          target.value.slice(0, target.selectionStart) +\n          key +\n          target.value.slice(target.selectionEnd);\n        dispatchInput();\n      } else if (target.isContentEditable) {\n        let node = document.createTextNode(key);\n        let selection = window.getSelection();\n        let range = selection.getRangeAt(0);\n        range.deleteContents();\n        range.insertNode(node);\n        range.setStartAfter(node);\n        range.setEndAfter(node);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n\n    dispatch({ type: 'keyup', cancelable: true, key: key });\n  }\n}\n\n/* istanbul ignore next */\n/**\n * Simulates a mouse event as it would occur on Safari 7.\n *\n * @param kwArgs Parameters for the mouse event.\n */\nfunction simulateMouse(kwArgs: any) {\n  let position = kwArgs.position;\n\n  function dispatch(kwArgs: any) {\n    let event: MouseEvent;\n    if (typeof MouseEvent === 'function') {\n      event = new MouseEvent(kwArgs.type, {\n        bubbles: 'bubbles' in kwArgs ? kwArgs.bubbles : true,\n        cancelable: kwArgs.cancelable || false,\n        view: window,\n        detail: kwArgs.detail || 0,\n        screenX: window.screenX + position.x,\n        screenY: window.screenY + position.y,\n        clientX: position.x,\n        clientY: position.y,\n        ctrlKey: kwArgs.ctrlKey || false,\n        shiftKey: kwArgs.shiftKey || false,\n        altKey: kwArgs.altKey || false,\n        metaKey: kwArgs.metaKey || false,\n        button: kwArgs.button || 0,\n        relatedTarget: kwArgs.relatedTarget\n      });\n    } else {\n      event = document.createEvent('MouseEvents');\n      event.initMouseEvent(\n        kwArgs.type,\n        kwArgs.bubbles || true,\n        kwArgs.cancelable || false,\n        window,\n        kwArgs.detail || 0,\n        window.screenX + position.x,\n        window.screenY + position.y,\n        position.x,\n        position.y,\n        kwArgs.ctrlKey || false,\n        kwArgs.altKey || false,\n        kwArgs.shiftKey || false,\n        kwArgs.metaKey || false,\n        kwArgs.button || 0,\n        kwArgs.relatedTarget || null\n      );\n    }\n\n    return kwArgs.target.dispatchEvent(event);\n  }\n\n  function click(target: any, button: any, detail: any) {\n    if (!down(target, button)) {\n      return false;\n    }\n\n    if (!up(target, button)) {\n      return false;\n    }\n\n    return dispatch({\n      button: button,\n      cancelable: true,\n      detail: detail,\n      target: target,\n      type: 'click'\n    });\n  }\n\n  function down(target: any, button: any) {\n    return dispatch({\n      button: button,\n      cancelable: true,\n      target: target,\n      type: 'mousedown'\n    });\n  }\n\n  function up(target: any, button: any) {\n    return dispatch({\n      button: button,\n      cancelable: true,\n      target: target,\n      type: 'mouseup'\n    });\n  }\n\n  function move(\n    currentElement: HTMLElement,\n    newElement: HTMLElement,\n    xOffset: number,\n    yOffset: number\n  ) {\n    if (newElement) {\n      const bbox = newElement.getBoundingClientRect();\n\n      if (xOffset == null) {\n        xOffset = (bbox.right - bbox.left) * 0.5;\n      }\n\n      if (yOffset == null) {\n        yOffset = (bbox.bottom - bbox.top) * 0.5;\n      }\n\n      position = { x: bbox.left + xOffset, y: bbox.top + yOffset };\n    } else {\n      position.x += xOffset || 0;\n      position.y += yOffset || 0;\n\n      newElement = <HTMLElement>(\n        document.elementFromPoint(position.x, position.y)\n      );\n    }\n\n    if (currentElement !== newElement) {\n      dispatch({\n        type: 'mouseout',\n        target: currentElement,\n        relatedTarget: newElement\n      });\n      dispatch({\n        type: 'mouseleave',\n        target: currentElement,\n        relatedTarget: newElement,\n        bubbles: false\n      });\n      dispatch({\n        type: 'mouseenter',\n        target: newElement,\n        relatedTarget: currentElement,\n        bubbles: false\n      });\n      dispatch({\n        type: 'mouseover',\n        target: newElement,\n        relatedTarget: currentElement\n      });\n    }\n\n    dispatch({ type: 'mousemove', target: newElement, bubbles: true });\n\n    return position;\n  }\n\n  const target = <HTMLElement>document.elementFromPoint(position.x, position.y);\n\n  if (kwArgs.action === 'mousemove') {\n    return move(target, kwArgs.element, kwArgs.xOffset, kwArgs.yOffset);\n  } else if (kwArgs.action === 'mousedown') {\n    return down(target, kwArgs.button);\n  } else if (kwArgs.action === 'mouseup') {\n    return up(target, kwArgs.button);\n  } else if (kwArgs.action === 'click') {\n    return click(target, kwArgs.button, 0);\n  } else if (kwArgs.action === 'dblclick') {\n    if (!click(target, kwArgs.button, 0)) {\n      return false;\n    }\n\n    if (!click(target, kwArgs.button, 1)) {\n      return false;\n    }\n\n    return dispatch({\n      type: 'dblclick',\n      target: target,\n      button: kwArgs.button,\n      detail: 2,\n      cancelable: true\n    });\n  }\n}\n\nfunction isStringArray(value: any): value is string[] {\n  return Array.isArray(value) && typeof value[0] === 'string';\n}\n"]}